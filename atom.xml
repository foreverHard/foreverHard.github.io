<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-04-18T02:36:52.351Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>第二章线性表</title>
    <link href="http://example.com/2022/04/12/%E7%AC%AC%E4%BA%8C%E7%AB%A0%E7%BA%BF%E6%80%A7%E8%A1%A8/"/>
    <id>http://example.com/2022/04/12/%E7%AC%AC%E4%BA%8C%E7%AB%A0%E7%BA%BF%E6%80%A7%E8%A1%A8/</id>
    <published>2022-04-12T02:39:28.000Z</published>
    <updated>2022-04-18T02:36:52.351Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第二章线性表"><a href="#第二章线性表" class="headerlink" title="第二章线性表"></a>第二章线性表</h1><h2 id="线性表的定义和基本操作"><a href="#线性表的定义和基本操作" class="headerlink" title="线性表的定义和基本操作"></a>线性表的定义和基本操作</h2><h3 id="知识框架"><a href="#知识框架" class="headerlink" title="知识框架"></a>知识框架</h3><p><img src="https://img-blog.csdnimg.cn/0c4b1f13a7a3472a88f6451ac3b16028.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA56CB5Yac5Lmf5piv5Yac,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p><code>1、相同数据类型，有限序列</code></p><p><code>2、除第一个元素外每个元素有且仅有一个直接前驱</code></p><p><code>3、除最后一个元素外，每个元素有且仅有一个后继</code></p><p><code>4、位序从1开始，线性表下标从0开始</code></p><p><code>5、线性表逻辑结构，表示元素直接一对一的相邻关系</code></p><p><code>6、顺序表和链表是指存储结构</code></p><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><p><img src="https://img-blog.csdnimg.cn/e007bcbf978449818963de8f8f93f5d3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA56CB5Yac5Lmf5piv5Yac,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="线性表的顺序表示"><a href="#线性表的顺序表示" class="headerlink" title="线性表的顺序表示"></a>线性表的顺序表示</h2><h3 id="顺序表的定义"><a href="#顺序表的定义" class="headerlink" title="顺序表的定义"></a>顺序表的定义</h3><p><code>逻辑上相邻的两个元素在物理位置上也相邻</code></p><p><img src="https://img-blog.csdnimg.cn/2e023ecf0bf541778832bc825522d071.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA56CB5Yac5Lmf5piv5Yac,size_16,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><ul><li><p><strong>动态分配</strong>和<strong>静态分配</strong>：</p><ul><li>C的初始动态分配语句：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">L.data = (类型*) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(类型*)*表长度);<span class="comment">//malloc的头文件是#include &lt;stdlib.h&gt;</span></span><br></pre></td></tr></table></figure><ul><li>C++的初始动态分配语句：</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">L.data = <span class="keyword">new</span> 数据类型[表长];</span><br></pre></td></tr></table></figure><p><code>注意：动态分配不是链式存储，属于顺序存储结构，物理结构没有变化，依然是随机存取方式，只是分配的空间大小可以在运行时动态决定</code></p></li><li><p>顺序表特点：</p><ul><li>随机访问</li><li>存储密度高，每个节点只存储数据元素</li><li>逻辑上相邻的元素物理上也相邻</li><li>插入和删除需移动大量元素</li></ul></li><li><p>基本操作代码</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> InitSize 100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MaxSize 50 <span class="comment">//数组长度及顺序表的初始化长度 </span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">SeqList</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> data[MaxSize];</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line">&#125; SeqList;</span><br><span class="line"><span class="comment">//初始化表 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitList</span><span class="params">(SeqList *L)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;MaxSize ; i++)</span><br><span class="line">L-&gt;data[i] = <span class="number">0</span>;</span><br><span class="line">L-&gt;len = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//插入操作</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">在顺序表L的第i个位置插入新元素e （1&lt;=i&lt;=L.length+1） </span></span><br><span class="line"><span class="comment">若输入的I不合法，返回false</span></span><br><span class="line"><span class="comment">否则，将顺序表的第i个元素及其后的所有元素右移一个位置，腾出一个空位置，插入e，插入成功返回ture </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ListInsert</span><span class="params">(SeqList *L,<span class="keyword">int</span> i ,<span class="keyword">int</span> e)</span><span class="comment">//这里的i是表中位置，不是下标，e是要插入的元素 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(i&lt;<span class="number">1</span>|| i&gt;L-&gt;len +<span class="number">1</span>)<span class="comment">//i的位置不在1-len之间 </span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(L-&gt;len&gt;=MaxSize)<span class="comment">//表满了 </span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = L-&gt;len;j&gt;=i;j--)</span><br><span class="line">L-&gt;data[j] = L-&gt;data[j<span class="number">-1</span>];</span><br><span class="line">L-&gt;data[i<span class="number">-1</span>] = e;</span><br><span class="line">L-&gt;len++;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//遍历</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">OutPutList</span><span class="params">(SeqList *L)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L-&gt;len == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;表空&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;L-&gt;len;i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,L-&gt;data[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;此时的表长为%d\n&quot;</span>,L-&gt;len);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//删除</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ListDlete</span><span class="params">(SeqList *L,<span class="keyword">int</span> i,<span class="keyword">int</span> &amp;e)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>( i &gt; L-&gt;len || i&lt;<span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">e = L-&gt;data[i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j= i<span class="number">-1</span>; j &lt; L-&gt;len ;j++)<span class="comment">//这里的i是表长的i ,从1开始数 </span></span><br><span class="line">L-&gt;data[j] = L-&gt;data[j+<span class="number">1</span>];</span><br><span class="line">L-&gt;len--;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//按位查找</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">GetElem</span><span class="params">(SeqList *L,<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(i&lt;<span class="number">1</span> || i&gt;L-&gt;len)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;第%d位的元素是%d\n&quot;</span>,i,L-&gt;data[i<span class="number">-1</span>]);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//按值查找</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">LocateElem</span><span class="params">(SeqList *L,<span class="keyword">int</span> e)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j&lt;=L-&gt;len;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (j == L-&gt;len)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;无此数据，查找失败\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(L-&gt;data[j] == e)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;查找成功，您要找的数据在第%d位\n&quot;</span>,j+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//判空操作</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Empty</span><span class="params">(SeqList *L)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L == <span class="literal">NULL</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//销毁表</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">DestroyList</span><span class="params">(SeqList *L)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">SeqList *L = <span class="literal">NULL</span>,l;<span class="comment">//生成静态顺序表实体l，指向该实体的指针&#x27;L&#x27; </span></span><br><span class="line">L = &amp;l;</span><br><span class="line">InitList(L);</span><br><span class="line">ListInsert(L,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">ListInsert(L,<span class="number">2</span>,<span class="number">3123</span>);</span><br><span class="line">ListInsert(L,<span class="number">3</span>,<span class="number">123</span>);</span><br><span class="line">OutPutList(L);</span><br><span class="line"><span class="keyword">int</span> e=<span class="number">3123</span>;</span><br><span class="line">ListDlete(L,<span class="number">2</span>,e);</span><br><span class="line">OutPutList(L); </span><br><span class="line">GetElem(L,<span class="number">2</span>);</span><br><span class="line">LocateElem(L,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="线性表的链式表示"><a href="#线性表的链式表示" class="headerlink" title="线性表的链式表示"></a>线性表的链式表示</h2><h3 id="单链表的定义"><a href="#单链表的定义" class="headerlink" title="单链表的定义"></a>单链表的定义</h3><ul><li><p>非随机存储结构不能直接找到表中某个特定的结点</p></li><li><p>单链表可解决顺序表需要大量连续存储单元的缺点，但单链表附加指针域，也存在浪费存储空间的缺点</p></li><li><p><img src="https://img-blog.csdnimg.cn/53483a7ac20046268e57229d450ffb92.png" alt="在这里插入图片描述"></p></li></ul><h3 id="单链表上的基本操作的实现"><a href="#单链表上的基本操作的实现" class="headerlink" title="单链表上的基本操作的实现"></a>单链表上的基本操作的实现</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> data;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;LNode, *LinkList;</span><br><span class="line"><span class="comment">//头插法 </span></span><br><span class="line"><span class="function">LinkList <span class="title">List_HeadInsert</span><span class="params">(LinkList &amp;L,<span class="keyword">int</span> &amp;len)</span></span>&#123;</span><br><span class="line">LNode *s;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line">L = (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LinkList));<span class="comment">//创建头结点 </span></span><br><span class="line">L-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line"><span class="keyword">while</span>(x != <span class="number">9999</span>)&#123;</span><br><span class="line">s = (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LinkList));<span class="comment">//创建新节点</span></span><br><span class="line">s-&gt;data = x;</span><br><span class="line">s-&gt;next = L-&gt;next;</span><br><span class="line">L-&gt;next = s;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">len++; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//尾插法</span></span><br><span class="line"><span class="function">LinkList <span class="title">List_TailInsert</span><span class="params">(LinkList &amp;L,<span class="keyword">int</span> &amp;len)</span></span>&#123;</span><br><span class="line">LNode *r,*m;<span class="comment">//s是设置的尾指针 </span></span><br><span class="line">L = (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LinkList));</span><br><span class="line">r = L;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line"><span class="keyword">while</span>(x != <span class="number">9999</span>)&#123;</span><br><span class="line">m = (LNode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode*));</span><br><span class="line">m-&gt;data = x;</span><br><span class="line">r-&gt;next = m;</span><br><span class="line">r = m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">len++;</span><br><span class="line">&#125;</span><br><span class="line">r-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">return</span> L;</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">GetElem</span><span class="params">(LinkList L,<span class="keyword">int</span> i,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">LinkList  head = L;</span><br><span class="line"><span class="keyword">if</span>(L == <span class="literal">NULL</span> || i&gt;len || i == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j&lt;i;j++)</span><br><span class="line">head= head-&gt;next;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;第%d位的元素是%d\n&quot;</span>,i,head-&gt;data);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//按值查找 </span></span><br><span class="line"><span class="function">LNode *<span class="title">LocateElem</span><span class="params">(LinkList L,<span class="keyword">int</span> e)</span></span>&#123;</span><br><span class="line">LinkList p = L;</span><br><span class="line"><span class="keyword">while</span>(p-&gt;data != e &amp;&amp; p != <span class="literal">NULL</span>)</span><br><span class="line">p = p-&gt;next;</span><br><span class="line"><span class="keyword">return</span> p;<span class="comment">//如果没找到就返回NULL </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//遍历输出</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OutPut</span><span class="params">(LinkList &amp;L,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">LNode *s = L;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;-----------------------\n&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(s-&gt;next != <span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,s-&gt;next-&gt;data);</span><br><span class="line">s = s-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;表长为%d\n&quot;</span>,len);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;-----------------------\n&quot;</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//在某一位置插入新的结点</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Insert</span><span class="params">(LinkList &amp;L,<span class="keyword">int</span> i,<span class="keyword">int</span> &amp;len)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L == <span class="literal">NULL</span> || i &gt; len ||i == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">LinkList s = L,m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span> ;j &lt; i<span class="number">-1</span>;j++)</span><br><span class="line">s = s-&gt;next;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;您要插入的元素为：\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">m = (LinkList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LinkList));</span><br><span class="line">m-&gt;data = x;</span><br><span class="line">m-&gt;next = s-&gt;next;</span><br><span class="line">s-&gt;next = m;</span><br><span class="line">len++;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//删除</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Delete</span><span class="params">(LinkList &amp;L,<span class="keyword">int</span> i,<span class="keyword">int</span> &amp;len)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(L == <span class="literal">NULL</span> || i &gt; len ||i == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">LinkList s=L,m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i<span class="number">-1</span>; j++)</span><br><span class="line">s = s-&gt;next;</span><br><span class="line">m = s-&gt;next;</span><br><span class="line">s-&gt;next = m-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(m);</span><br><span class="line">len--;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">LinkList *head,L;</span><br><span class="line"><span class="keyword">int</span> len=<span class="number">0</span>,s,Locate,Value;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;********************************************\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1、头插     2、尾插 3、遍历输出 4、按位查找\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;5、按值查找 6、插入 7、删除     8、结束程序\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;********************************************\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;s);</span><br><span class="line"><span class="keyword">switch</span>(s)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:<span class="comment">//头插</span></span><br><span class="line">&#123;</span><br><span class="line">List_HeadInsert(L,len);</span><br><span class="line"> <span class="keyword">break</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:<span class="comment">//尾插</span></span><br><span class="line">&#123;</span><br><span class="line">List_TailInsert(L,len);</span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:&#123;</span><br><span class="line">OutPut(L,len);<span class="comment">//遍历输出 </span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;您要查找的位置为：\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;Locate);</span><br><span class="line">GetElem(L,Locate,len);<span class="comment">//按位查找</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:&#123;</span><br><span class="line"><span class="comment">//值查找 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;您要查找的值为：\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;Value);</span><br><span class="line">LinkList s = LocateElem(L,Value);</span><br><span class="line"><span class="keyword">if</span>(s!=<span class="literal">NULL</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;该值成功找到！为%d\n&quot;</span>,s-&gt;data);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:&#123;<span class="comment">//插入</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;您要插入的位置为：\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;Locate);</span><br><span class="line">Insert(L,Locate,len);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;您要删除的位置为：\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;Locate);</span><br><span class="line">Delete(L,Locate,len);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>计算表长时需要<strong>注意</strong>：因为单链表的长度是不包括头结点的，因此<strong>不带头结点</strong>和<strong>带头结点</strong>的单链表在求表长操作上会略有不同，对不带头结点的单链表，当表为空时，要单独处理。</p></blockquote><h3 id="双链表"><a href="#双链表" class="headerlink" title="双链表"></a>双链表</h3><p>​    <img src="https://img-blog.csdnimg.cn/97629afe863e42e8bc2069a2474db88f.png" alt="在这里插入图片描述"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">DNode</span>&#123;</span></span><br><span class="line">    ElemType data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">DNode</span> *<span class="title">prior</span>,*<span class="title">next</span>;</span></span><br><span class="line">&#125;DNode,*DLinklist;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;第二章线性表&quot;&gt;&lt;a href=&quot;#第二章线性表&quot; class=&quot;headerlink&quot; title=&quot;第二章线性表&quot;&gt;&lt;/a&gt;第二章线性表&lt;/h1&gt;&lt;h2 id=&quot;线性表的定义和基本操作&quot;&gt;&lt;a href=&quot;#线性表的定义和基本操作&quot; class=&quot;header</summary>
      
    
    
    
    <category term="数据结构" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="数据结构" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>某图书馆热门数据爬取</title>
    <link href="http://example.com/2021/07/19/%E6%9F%90%E5%9B%BE%E4%B9%A6%E9%A6%86%E7%83%AD%E9%97%A8%E6%95%B0%E6%8D%AE%E7%88%AC%E5%8F%96/"/>
    <id>http://example.com/2021/07/19/%E6%9F%90%E5%9B%BE%E4%B9%A6%E9%A6%86%E7%83%AD%E9%97%A8%E6%95%B0%E6%8D%AE%E7%88%AC%E5%8F%96/</id>
    <published>2021-07-19T11:45:21.000Z</published>
    <updated>2021-07-19T11:52:46.399Z</updated>
    
    <content type="html"><![CDATA[<h1 id="某图书馆热门数据爬取"><a href="#某图书馆热门数据爬取" class="headerlink" title="某图书馆热门数据爬取"></a>某图书馆热门数据爬取</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver <span class="keyword">import</span> ActionChains</span><br><span class="line">broswer = webdriver.Chrome()</span><br><span class="line">broswer.set_window_size(<span class="number">1400</span>, <span class="number">1400</span>)</span><br><span class="line">book = xlwt.Workbook(encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">sheet = book.add_sheet(<span class="string">&#x27;book&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&#x27;title&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">1</span>, <span class="string">&#x27;author&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">2</span>, <span class="string">&#x27;publish&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">3</span>, <span class="string">&#x27;index&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">4</span>, <span class="string">&#x27;times&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search</span>(<span class="params">soup</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">list</span> = soup.find(class_=<span class="string">&#x27;table_line&#x27;</span>).find_all(<span class="string">&#x27;tr&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> <span class="built_in">list</span>:</span><br><span class="line">        title = item.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">1</span>].text</span><br><span class="line">        author = item.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">2</span>].text</span><br><span class="line">        publish = item.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">3</span>].text</span><br><span class="line">        index = item.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">4</span>].text</span><br><span class="line">        times = item.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">5</span>].text</span><br><span class="line">        <span class="keyword">global</span> n</span><br><span class="line">        sheet.write(n, <span class="number">0</span>, title)</span><br><span class="line">        sheet.write(n, <span class="number">1</span>, author)</span><br><span class="line">        sheet.write(n, <span class="number">2</span>, publish)</span><br><span class="line">        sheet.write(n, <span class="number">3</span>, index)</span><br><span class="line">        sheet.write(n, <span class="number">4</span>, times)</span><br><span class="line"></span><br><span class="line">        n = n+<span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">next_page</span>():</span></span><br><span class="line">    broswer.get(<span class="string">&#x27;http://opac.hznu.edu.cn:8080/top/top_lend.php&#x27;</span>)</span><br><span class="line">    btn2 = broswer.find_element_by_xpath(<span class="string">&#x27;/html/body/div[3]/a[4]&#x27;</span>)</span><br><span class="line">    ActionChains(broswer).click(btn2).perform()</span><br><span class="line">    html = broswer.page_source</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">    search(soup)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">        next_page()</span><br><span class="line"></span><br><span class="line">main()</span><br><span class="line">book.save(<span class="string">&#x27;book.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>纯课设需要，无商业用途</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;某图书馆热门数据爬取&quot;&gt;&lt;a href=&quot;#某图书馆热门数据爬取&quot; class=&quot;headerlink&quot; title=&quot;某图书馆热门数据爬取&quot;&gt;&lt;/a&gt;某图书馆热门数据爬取&lt;/h1&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;</summary>
      
    
    
    
    <category term="Python" scheme="http://example.com/categories/Python/"/>
    
    
    <category term="爬虫" scheme="http://example.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>yq数据爬取</title>
    <link href="http://example.com/2021/07/19/yq%E6%95%B0%E6%8D%AE%E7%88%AC%E5%8F%96/"/>
    <id>http://example.com/2021/07/19/yq%E6%95%B0%E6%8D%AE%E7%88%AC%E5%8F%96/</id>
    <published>2021-07-19T11:44:57.000Z</published>
    <updated>2021-07-19T11:53:09.331Z</updated>
    
    <content type="html"><![CDATA[<h1 id="yq数据爬取"><a href="#yq数据爬取" class="headerlink" title="yq数据爬取"></a>yq数据爬取</h1><blockquote><p>此网站CSS元素定期更新，若复制使用，则需写的新的CSS元素的定位，旧的定位可能用不了</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd<span class="comment">#数据框操作</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver <span class="keyword">import</span> ActionChains</span><br><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"><span class="keyword">import</span> pyecharts</span><br><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">broswer = webdriver.Chrome()</span><br><span class="line">broswer.set_window_size(<span class="number">500</span>, <span class="number">500</span>)</span><br><span class="line">book = xlwt.Workbook(encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">sheet = book.add_sheet(<span class="string">&#x27;中国与全球疫情趋势&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&#x27;地区&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">1</span>, <span class="string">&#x27;新增&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">2</span>, <span class="string">&#x27;现有&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">3</span>, <span class="string">&#x27;累计&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">4</span>, <span class="string">&#x27;治愈&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">5</span>, <span class="string">&#x27;死亡&#x27;</span>)</span><br><span class="line">n = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;def data_s(i):</span></span><br><span class="line"><span class="string">    wb = xlrd.open_workbook(&#x27;全国疫情趋势.xlsx&#x27;)  # 打开文件</span></span><br><span class="line"><span class="string">    sheet = wb.sheet_by_index(0)</span></span><br><span class="line"><span class="string">    cols = sheet.col_values(i)  # 获取新增</span></span><br><span class="line"><span class="string">    rows = sheet.col_values(0)  # 获取省份</span></span><br><span class="line"><span class="string">    dir = &#123;&#125;</span></span><br><span class="line"><span class="string">    for i in range(1, 35):</span></span><br><span class="line"><span class="string">        temp = rows[i]</span></span><br><span class="line"><span class="string">        dir[temp] = cols[i]</span></span><br><span class="line"><span class="string">    arr = list(dir.keys())</span></span><br><span class="line"><span class="string">    num = list(dir.values())</span></span><br><span class="line"><span class="string">    return arr,num&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;#柱形图</span></span><br><span class="line"><span class="string">def visual_bar():</span></span><br><span class="line"><span class="string">        s = [&#x27;&#x27;,&#x27;新增&#x27;,&#x27;现有&#x27;,&#x27;累计&#x27;,&#x27;治愈&#x27;,&#x27;死亡&#x27;]</span></span><br><span class="line"><span class="string">        for i in range(1,6):</span></span><br><span class="line"><span class="string">            arr,num = data_s(i)</span></span><br><span class="line"><span class="string">            bar = (Bar()</span></span><br><span class="line"><span class="string">                   .add_xaxis(arr)</span></span><br><span class="line"><span class="string">                   .add_yaxis(&#x27;&#x27;, num)</span></span><br><span class="line"><span class="string">                   )</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            bar.render(&#x27;%s.html&#x27;%(s[i]))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment">#饼状图现有人数最多的前10个省</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;def visual_pie():</span></span><br><span class="line"><span class="string">    arr , num = data_s(2)</span></span><br><span class="line"><span class="string">    pie = Pie(&quot;现有人数最多的10个省&quot;, &quot;现有人数&quot;)</span></span><br><span class="line"><span class="string">    pie.add(&quot;累计人数&quot;, arr, num)</span></span><br><span class="line"><span class="string">    pie.render(&#x27;现有人数最多的10个省.html&#x27;)#</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据获取加保存</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search</span>(<span class="params">soup</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">list</span> = soup.find(class_=<span class="string">&#x27;VirusTable_1-1-303_38pQEh&#x27;</span>).find_all(class_=<span class="string">&#x27;VirusTable_1-1-303_3m6Ybq&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> <span class="built_in">list</span>:</span><br><span class="line">        diqu = item.find(class_=<span class="string">&#x27;VirusTable_1-1-303_AcDK7v&#x27;</span>).text</span><br><span class="line">        add1 = item.find_all(class_=<span class="string">&#x27;VirusTable_1-1-303_3x1sDV&#x27;</span>)[<span class="number">0</span>].text</span><br><span class="line">        xianyou = item.find_all(class_=<span class="string">&#x27;VirusTable_1-1-303_3x1sDV&#x27;</span>)[<span class="number">1</span>].text</span><br><span class="line">        leiji = item.find_all(class_=<span class="string">&#x27;VirusTable_1-1-303_3x1sDV&#x27;</span>)[<span class="number">2</span>].text</span><br><span class="line">        zhiyu = item.find_all(class_=<span class="string">&#x27;VirusTable_1-1-303_EjGi8c&#x27;</span>)[<span class="number">0</span>].text</span><br><span class="line">        siwang = item.find_all(class_=<span class="string">&#x27;VirusTable_1-1-303_EjGi8c&#x27;</span>)[<span class="number">1</span>].text</span><br><span class="line">        <span class="keyword">global</span> n</span><br><span class="line"></span><br><span class="line">        sheet.write(n, <span class="number">0</span>, diqu)</span><br><span class="line">        sheet.write(n, <span class="number">1</span>, add1)</span><br><span class="line">        sheet.write(n, <span class="number">2</span>, xianyou)</span><br><span class="line">        sheet.write(n, <span class="number">3</span>, leiji)</span><br><span class="line">        sheet.write(n, <span class="number">4</span>, zhiyu)</span><br><span class="line">        sheet.write(n, <span class="number">5</span>, siwang)</span><br><span class="line">        n = n+<span class="number">1</span></span><br><span class="line">        list1 = soup.find(class_=<span class="string">&#x27;VirusTable_1-1-303_3U6wJT&#x27;</span>).find_all(class_=<span class="string">&#x27;VirusTable_1-1-303_2AH4U9&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> list1:</span><br><span class="line">        diqu1 = item.find(class_=<span class="string">&#x27;VirusTable_1-1-303_AcDK7v&#x27;</span>).text</span><br><span class="line">        add11 = item.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">1</span>].text</span><br><span class="line">        leiji1 = <span class="built_in">int</span>(item.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">2</span>].text)</span><br><span class="line">        zhiyu1 = <span class="built_in">int</span>(item.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">3</span>].text)</span><br><span class="line">        xianyou1 = leiji1 - zhiyu1</span><br><span class="line">        siwang1 = item.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">4</span>].text</span><br><span class="line"></span><br><span class="line">        sheet.write(n, <span class="number">0</span>, diqu1)</span><br><span class="line">        sheet.write(n, <span class="number">1</span>, add11)</span><br><span class="line">        sheet.write(n, <span class="number">2</span>, xianyou1)</span><br><span class="line">        sheet.write(n, <span class="number">3</span>, leiji1)</span><br><span class="line">        sheet.write(n, <span class="number">4</span>, zhiyu1)</span><br><span class="line">        sheet.write(n, <span class="number">5</span>, siwang1)</span><br><span class="line">        n = n + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    broswer.get(<span class="string">&#x27;https://voice.baidu.com/act/newpneumonia/newpneumonia/?from=osari_aladin_banner&#x27;</span>)</span><br><span class="line">    btn1 = broswer.find_element_by_xpath(<span class="string">&#x27;/html/body/div[2]/div/div/div/section/div[2]/div[4]/div[3]/div[4]/div&#x27;</span>)</span><br><span class="line">    ActionChains(broswer).click(btn1).perform()</span><br><span class="line">    time.sleep(<span class="number">3</span>)</span><br><span class="line">    btn2 = broswer.find_element_by_xpath(<span class="string">&#x27;/html/body/div[2]/div/div/div/section/div[2]/div[4]/div[3]/div[11]/div&#x27;</span>)</span><br><span class="line">    ActionChains(broswer).click(btn2).perform()</span><br><span class="line">    time.sleep(<span class="number">3</span>)</span><br><span class="line">    html = broswer.page_source</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">    search(soup)</span><br><span class="line">    book.save(<span class="string">&#x27;全国疫情趋势.xlsx&#x27;</span>)</span><br><span class="line">    time.sleep(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;yq数据爬取&quot;&gt;&lt;a href=&quot;#yq数据爬取&quot; class=&quot;headerlink&quot; title=&quot;yq数据爬取&quot;&gt;&lt;/a&gt;yq数据爬取&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;此网站CSS元素定期更新，若复制使用，则需写的新的CSS元素的定位，旧的定位可能用</summary>
      
    
    
    
    <category term="Python" scheme="http://example.com/categories/Python/"/>
    
    
    <category term="爬虫" scheme="http://example.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>搭建博客GitHub+Hexo</title>
    <link href="http://example.com/2021/07/19/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2GitHub-Hexo/"/>
    <id>http://example.com/2021/07/19/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2GitHub-Hexo/</id>
    <published>2021-07-19T05:54:58.000Z</published>
    <updated>2022-04-14T02:46:45.207Z</updated>
    
    <content type="html"><![CDATA[<h1 id="搭建博客详细步骤"><a href="#搭建博客详细步骤" class="headerlink" title="搭建博客详细步骤"></a>搭建博客详细步骤</h1><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>安装完成后 输入node -v 和 npm -v ，如果出现版本好，则安装成功</p><h2 id="添加国内镜像"><a href="#添加国内镜像" class="headerlink" title="添加国内镜像"></a>添加国内镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><ul><li>目的：为了把本地文件上传到GitHub上</li><li>安装：<ul><li>最后一步选择<code>Use Git from the Windows Command Prompt</code>,其余默认</li><li>完成后，命令行输入git –version</li></ul></li></ul><h2 id="注册GitHub账号"><a href="#注册GitHub账号" class="headerlink" title="注册GitHub账号"></a>注册GitHub账号</h2><h2 id="GitHub中"><a href="#GitHub中" class="headerlink" title="GitHub中"></a>GitHub中</h2><ol><li>新建项目 （New repository）</li><li>项目名格式：账号名.github.io（名称一定要与GitHub账号名一致！！！）</li><li>勾选README</li><li>进入Settings,点GitHub Pages，点Choose a theme选主题，分支默认是master，如果自动生成其他分支，除master外都删掉，我搭的时候就因为分支问题而没有正常显示</li></ol><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><ul><li><p>建立博客文件，根据自己意愿找个目录建</p></li><li><p>右键点Git Bash Here</p></li><li><p>输入</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-cli -g</span><br><span class="line">hexo -v//验证是否成功</span><br><span class="line">hexo init</span><br><span class="line">npm install</span><br><span class="line">hexo g//生成静态网页</span><br><span class="line">hexo s//打开本地服务器查看</span><br></pre></td></tr></table></figure><h2 id="连接GitHub与本地"><a href="#连接GitHub与本地" class="headerlink" title="连接GitHub与本地"></a>连接GitHub与本地</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;GitHub名字&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;邮箱&quot;</span></span><br></pre></td></tr></table></figure><ul><li>生成密钥SSH key:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;邮箱&quot;</span></span><br></pre></td></tr></table></figure><ul><li><p>进入GitHub，头像下面的<code>settings </code>，然后<code> SSH and GPG keys</code>新建一个SSH，名字随便</p></li><li><p>打开Git bash</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><ul><li><p>将内容复制到框中，保存</p></li><li><p>输入<code> ssh -T git@github.com</code>出现用户名就成功</p></li><li><p>博客根目录下_config.yml文件，配置相关信息</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: https://github.com/用户名/用户名.github.io</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h2 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h2><ul><li>博客根目录进入git bash</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-deployer-git</span><br></pre></td></tr></table></figure><ul><li><pre><code class="bash">hexo new post &quot;文章标题&quot;</code></pre></li><li><p>在<code>source\_posts</code>目录下就可以看到</p></li><li><p>编辑完后</p><ul><li><p>hexo clean 清理缓存①</p></li><li><p>hexo g 生成静态网页②</p></li><li><p>hexo s 在本地服务器看效果</p></li><li><p>hexo d 上传到GitHub③</p></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;搭建博客详细步骤&quot;&gt;&lt;a href=&quot;#搭建博客详细步骤&quot; class=&quot;headerlink&quot; title=&quot;搭建博客详细步骤&quot;&gt;&lt;/a&gt;搭建博客详细步骤&lt;/h1&gt;&lt;h2 id=&quot;安装Node-js&quot;&gt;&lt;a href=&quot;#安装Node-js&quot; class=&quot;he</summary>
      
    
    
    
    
    <category term="搭建博客" scheme="http://example.com/tags/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
