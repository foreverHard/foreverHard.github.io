<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[JSP]]></title>
      <url>/2021/07/20/JSP/</url>
      <content type="html"><![CDATA[<h1 id="指令include和动作include的区别"><a href="#指令include和动作include的区别" class="headerlink" title="指令include和动作include的区别"></a>指令include和动作include的区别</h1><h2 id="指令include（二合一）"><a href="#指令include（二合一）" class="headerlink" title="指令include（二合一）"></a>指令include（二合一）</h2><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;xxx.jsp&quot;</span>%&gt;</span><br></pre></td></tr></table></figure>

<p>xxx.jsp的内容会被插入到hello.jsp转译成的hello_jsp.java中，最后只会生成一个hello_jsp.java文件</p>
<p>两个文件运行时实际上合成了一个文件，所以不需要传参</p>
<h2 id="动作include"><a href="#动作include" class="headerlink" title="动作include"></a>动作include</h2><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;jsp:include page=<span class="string">&quot;footer.jsp&quot;</span>&gt;</span><br></pre></td></tr></table></figure>

<p>footer.jsp的内容不会被插入到hello.jsp转译成的hello_jsp.java中，还会有一个footer_jsp.java独立存在。hello_jsp.java会在服务端访问footer_jsp.java，然后把返回的结果嵌入到响应中</p>
<p>需要传参：</p>
<p>hello.jsp</p>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@page</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">    pageEncoding=<span class="string">&quot;UTF-8&quot;</span> <span class="keyword">import</span>=<span class="string">&quot;java.util.*&quot;</span>%&gt;</span><br><span class="line">  </span><br><span class="line">你好 JSP</span><br><span class="line">&lt;%=<span class="keyword">new</span> Date().toLocaleString()%&gt;</span><br><span class="line"> </span><br><span class="line">&lt;jsp:include page=<span class="string">&quot;footer.jsp&quot;</span>&gt;</span><br><span class="line">    &lt;jsp:param  name=<span class="string">&quot;year&quot;</span> value=<span class="string">&quot;2017&quot;</span> /&gt;</span><br><span class="line">&lt;/jsp:include&gt;</span><br></pre></td></tr></table></figure>

<p>footer.jsp</p>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;hr&gt;</span><br><span class="line">    &lt;p style=<span class="string">&quot;text-align:center&quot;</span>&gt;copyright@&lt;%=request.getParameter(<span class="string">&quot;year&quot;</span>)%&gt;</span><br><span class="line">&lt;/p&gt;</span><br></pre></td></tr></table></figure>

<h1 id="jsp跳转"><a href="#jsp跳转" class="headerlink" title="jsp跳转"></a>jsp跳转</h1><h2 id="客户端跳转"><a href="#客户端跳转" class="headerlink" title="客户端跳转"></a>客户端跳转</h2><blockquote>
<p>1、response.sendRedirect(“hello.jsp”);所有页面执行完以后跳转，不能传递request范围属性，</p>
<p>2、response.setHeader(“refresh”,”2;URL=index.jsp”),2秒后跳转到其他页面；</p>
<p>3、<a href="#"></a>，超链接</p>
<p>4、表单提交</p>
</blockquote>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">response.sendRedirect(<span class="string">&quot;hello.jsp&quot;</span>);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure>



<h2 id="服务端跳转"><a href="#服务端跳转" class="headerlink" title="服务端跳转"></a>服务端跳转</h2><blockquote>
<p>地址栏内容不变</p>
</blockquote>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;% request.getRequestDispatcher(<span class="string">&quot;hello.jsp&quot;</span>).forward(request, response); %&gt;</span><br><span class="line">或者</span><br><span class="line">&lt;jsp:forward page=<span class="string">&quot;hello.jsp&quot;</span>/&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>  1、request.getRequestDispatcher(“success.jsp”).forward(request,response)，它是只要执行到此语句之后则立刻进行跳转，可以传递request属性；<br>   2、<a href="jsp:forward">jsp:forward</a>,这种跳转属于无条件跳转，它只能在栈内转，而sendREdirect中则可以任意转，甚至可以输入baidu；//注：无条件跳转后，此跳转语句后边的代码都不会被执行（比如关闭数据库一类的）</p>
</blockquote>
<blockquote>
<p>所以如果在一个页面中使用JDBC，应在forward跳转之前关闭数据库链接，而使用response则可以在任意的位置处关闭</p>
</blockquote>
<h1 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h1><blockquote>
<p>由服务端创建，发送给浏览器，浏览器保存在用户本地，下次访问时就会把该Cookie发送给服务器</p>
</blockquote>
<blockquote>
<p>有的网站，登陆的时候，会出现一个选项，问你是否要一周内或者一个月内保持登陆状态。<br>如果你选了，那么一周之内，都不需要再输入账号密码。<br>这个功能，就是靠cookie来实现的</p>
</blockquote>
<h2 id="设置Cookie"><a href="#设置Cookie" class="headerlink" title="设置Cookie"></a>设置Cookie</h2><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">    pageEncoding=<span class="string">&quot;UTF-8&quot;</span> <span class="keyword">import</span>=<span class="string">&quot;javax.servlet.http.Cookie&quot;</span>%&gt;</span><br><span class="line"> </span><br><span class="line">&lt;%</span><br><span class="line">    Cookie c = <span class="keyword">new</span> Cookie(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;Gareen&quot;</span>);<span class="comment">//创建Cookie对象，设key和value</span></span><br><span class="line">    c.setMaxAge(<span class="number">60</span> * <span class="number">24</span> * <span class="number">60</span>);<span class="comment">//保留时间，按秒算，如果是0，浏览器一关就是销毁</span></span><br><span class="line">    c.setPath(<span class="string">&quot;/&quot;</span>);<span class="comment">//路径，只有访问特定路径才会提交Cookie</span></span><br><span class="line">    response.addCookie(c);<span class="comment">//通过response把Cookie保存在浏览器端</span></span><br><span class="line">%&gt;</span><br><span class="line"> </span><br><span class="line">&lt;a href=<span class="string">&quot;getCookie.jsp&quot;</span>&gt;跳转到获取cookie的页面&lt;/a&gt;</span><br></pre></td></tr></table></figure>

<h2 id="获得Cookie"><a href="#获得Cookie" class="headerlink" title="获得Cookie"></a>获得Cookie</h2><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">    pageEncoding=<span class="string">&quot;UTF-8&quot;</span> <span class="keyword">import</span>=<span class="string">&quot;javax.servlet.http.Cookie&quot;</span>%&gt;</span><br><span class="line"> </span><br><span class="line">&lt;%</span><br><span class="line">    Cookie[] cookies = request.getCookies();<span class="comment">//获得浏览器返回的所有Cookie</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> != cookies)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> d = <span class="number">0</span>; d &lt;= cookies.length - <span class="number">1</span>; d++) &#123;</span><br><span class="line">            out.print(cookies[d].getName() + <span class="string">&quot;:&quot;</span> + cookies[d].getValue() + <span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">        <span class="comment">//getName()获得Cookie的key,getValue()获得Cookie的值</span></span><br><span class="line">        &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure>

<h1 id="session"><a href="#session" class="headerlink" title="session"></a>session</h1><blockquote>
<p>会话，从用户发开浏览器访问一个网站开始，无论在这个网站中访问了多少页面，点击了多少连接，都属于同一个会话。知道该用户关闭浏览器为止，都属于同一个会话。</p>
</blockquote>
<h2 id="设置Session"><a href="#设置Session" class="headerlink" title="设置Session"></a>设置Session</h2><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;% session.setAttribute(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;teemo&quot;</span>);%&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;getSession.jsp&quot;</span>&gt;跳转到获取session的页面&lt;/a&gt;</span><br></pre></td></tr></table></figure>

<h2 id="获得Session"><a href="#获得Session" class="headerlink" title="获得Session"></a>获得Session</h2><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%String name = (String)session.getAttribute(<span class="string">&quot;name&quot;</span>); %&gt;</span><br><span class="line">session中的name:&lt;%=name%&gt;</span><br></pre></td></tr></table></figure>

<h1 id="Session与Cookie的关系"><a href="#Session与Cookie的关系" class="headerlink" title="Session与Cookie的关系"></a>Session与Cookie的关系</h1><blockquote>
<p>A将物品放自己的盒子里，B将物品放自己的盒子里，那么A与B可以通过各自的钥匙找到自己的盒子</p>
</blockquote>
<blockquote>
<p>盒子对应服务器上的Session</p>
<p>钥匙对应浏览器上的Cookie</p>
</blockquote>
<h1 id="如果没有cookie，session如何工作"><a href="#如果没有cookie，session如何工作" class="headerlink" title="如果没有cookie，session如何工作"></a>如果没有cookie，session如何工作</h1><blockquote>
<p>服务端无法获取jsessionid，每次访问都会生成一个新的session对象</p>
</blockquote>
<p>解决：</p>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.encodeURL(<span class="string">&quot;getSession.jsp&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>此方法会吧getSession.jsp这个URL转换为：</p>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getSession.jsp;jsessionid=22424AEA86ADBE89F335EEB649D997A8</span><br></pre></td></tr></table></figure>

<p>通过这个方式，提交jsessionid到服务器。 服务器根据这个jsessionid匹配到对应的session. 与session相关的功能，就可以正常工作了。</p>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">   session.setAttribute(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;teemo&quot;</span>);</span><br><span class="line">%&gt;</span><br><span class="line"> </span><br><span class="line">&lt;a href=<span class="string">&quot;&lt;%=response.encodeURL(&quot;</span>getSession.jsp<span class="string">&quot;)%&gt;&quot;</span>&gt;跳转到获取session的页面&lt;/a&gt;</span><br></pre></td></tr></table></figure>

<h1 id="session的有效期"><a href="#session的有效期" class="headerlink" title="session的有效期"></a>session的有效期</h1><blockquote>
<p>某网站登录后短时间内不用在登录，长时间不登录会要求重新登录，这就是因为服务端的session在一段时间不使用后就失效了，这个时间Tomcat默认配置是30分钟，可在/tomcat/conf/web.xml 中的session-config 配置进行调整</p>
<session-config>

<p>​    <session-timeout>30</session-timeout></p>
</session-config>
</blockquote>
<h1 id="JSP-作用域"><a href="#JSP-作用域" class="headerlink" title="JSP 作用域"></a>JSP 作用域</h1><blockquote>
<p><strong>pageContext</strong> 当前页面<br><strong>requestContext</strong> 一次请求<br><strong>sessionContext</strong> 当前会话<br><strong>applicationContext</strong> 全局，所有用户共享</p>
</blockquote>
<h2 id="pageContext"><a href="#pageContext" class="headerlink" title="pageContext"></a>pageContext</h2><blockquote>
<p>表示当前页面作用域，通过pageContext.setAttribute(key,value)的数据，只能在当前页面访问，在其他页面访问不了</p>
</blockquote>
<p>setContext.jsp</p>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%  pageContext.setAttribute(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;gareen&quot;</span>); %&gt;</span><br><span class="line">&lt;%= pageContext.getAttribute(<span class="string">&quot;name&quot;</span>)&gt;</span><br></pre></td></tr></table></figure>

<p>getContext.jsp</p>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%=pageContext.getAttributte(<span class="string">&quot;name&quot;</span>)&gt;</span><br></pre></td></tr></table></figure>

<h2 id="requestContext"><a href="#requestContext" class="headerlink" title="requestContext"></a>requestContext</h2><blockquote>
<p>requestContext表示一次请求，随着这次请求结束，其中的数据也就被回收</p>
</blockquote>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">request.setAttribute(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;gareen&quot;</span>);</span><br><span class="line">request.getAttribute(<span class="string">&quot;name&quot;</span>);</span><br></pre></td></tr></table></figure>

<h2 id="requsetContext与服务端跳转"><a href="#requsetContext与服务端跳转" class="headerlink" title="requsetContext与服务端跳转"></a>requsetContext与服务端跳转</h2><blockquote>
<p>requsetContext是一次跳转，如果是服务端跳转，从set.jsp跳转到get.jsp，还是一次请求，所以在get.jsp中可以去到在requestContext中设置的值，<code>页面间按传递数据的方式</code></p>
</blockquote>
<p>setContext.jsp</p>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%request.setAttribute(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;gareen&quot;</span>)%&gt;</span><br><span class="line">&lt;jsp:forward page=<span class="string">&quot;getContext.jsp&quot;</span>&gt;</span><br></pre></td></tr></table></figure>

<p>getContext.jsp</p>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%=request.getAttribute(<span class="string">&quot;name&quot;</span>)%&gt;</span><br></pre></td></tr></table></figure>



<h2 id="requestContext与客户端跳转"><a href="#requestContext与客户端跳转" class="headerlink" title="requestContext与客户端跳转"></a>requestContext与客户端跳转</h2><blockquote>
<p>客户端跳转，浏览器会发生一次新的访问，新的访问会产生一个新的request对象，所以页面间客户端跳转的情况下，是无法通过request传递数据的</p>
</blockquote>
<h2 id="sessionContext"><a href="#sessionContext" class="headerlink" title="sessionContext"></a>sessionContext</h2><blockquote>
<p>页面间传递数据也可以通过session传递，但是不同用户对应的session不同，所以session无法在不同的用户之间共享数据</p>
</blockquote>
<p>方式一：</p>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pageContext.setAttribute(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;gareen&quot;</span>,pageContext.SESSION_SCOPE);</span><br><span class="line">pageContext.getAttribute(<span class="string">&quot;name&quot;</span>,pageContext.SESSION_SCOPE)</span><br></pre></td></tr></table></figure>

<p>方式二：</p>
<p>getContext.jsp</p>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    session.setAttribute(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;gareen&quot;</span>);</span><br><span class="line">    response.sendRedirect(<span class="string">&quot;getContext.jsp&quot;</span>);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure>

<p>setContext.jsp</p>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%=session.getAttribute(<span class="string">&quot;name&quot;</span>)%&gt;</span><br></pre></td></tr></table></figure>

<h2 id="applicationContext"><a href="#applicationContext" class="headerlink" title="applicationContext"></a>applicationContext</h2><blockquote>
<p>applicationContext 指的是全局，所有用户共享同一个数据</p>
<p>在JSP中使用application对象， application对象是<strong>ServletContext接口的实例</strong><br>也可以通过 request.getServletContext()来获取。<br>所以 application == request.getServletContext() 会返回true<br>application映射的就是web应用本身。</p>
</blockquote>
<p>getContext.jsp</p>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    application.setAttribute(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;gareen&quot;</span>);</span><br><span class="line">    response.sendRedirect(<span class="string">&quot;getContext.jsp&quot;</span>);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure>

<p>setContext.jsp</p>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%=application.getAttribute(<span class="string">&quot;name&quot;</span>)%&gt;</span><br></pre></td></tr></table></figure>

<h1 id="JSP隐式对象"><a href="#JSP隐式对象" class="headerlink" title="JSP隐式对象"></a>JSP隐式对象</h1><blockquote>
<p>不需要显示定义，直接就可以使用的对象</p>
</blockquote>
<blockquote>
<p>9个：</p>
<p>1、request 请求</p>
<p>2、response 响应</p>
<p>3、out 输出</p>
<p>4、pageContext 当前页面作用域</p>
<p>5、session 会话作用域</p>
<p>6、application 全局作用域</p>
<p>7、page</p>
<p>8、config</p>
<p>9、exception</p>
</blockquote>
<h2 id="page"><a href="#page" class="headerlink" title="page"></a>page</h2><blockquote>
<p>page对象即表示当前对象</p>
<p>JSP会被编译为一个Servlet类，运行的时候是一个Servlet实例。page即代表this</p>
</blockquote>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%=page%&gt;</span><br><span class="line">&lt;%=<span class="keyword">this</span>%&gt;</span><br></pre></td></tr></table></figure>

<h2 id="config-用法不常见，不推荐使用"><a href="#config-用法不常见，不推荐使用" class="headerlink" title="config(用法不常见，不推荐使用)"></a>config(用法不常见，不推荐使用)</h2><blockquote>
<p>config可以获取一些在web.xml中初始化的参数。</p>
</blockquote>
<h2 id="exception-异常处理"><a href="#exception-异常处理" class="headerlink" title="exception(异常处理)"></a>exception(异常处理)</h2><blockquote>
<p>exception 对象只有当前页面的&lt;%@page 指令设置为isErrorPage=”true”的时候才可以使用</p>
<p>同时，在其他页面也需要设置&lt;%@page 指令errorPage=””来指定一个专门处理异常的页面</p>
</blockquote>
<p>try.jsp</p>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">    pageEncoding=<span class="string">&quot;UTF-8&quot;</span> errorPage=<span class="string">&quot;catch.jsp&quot;</span>%&gt;</span><br><span class="line"> </span><br><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line">    a[<span class="number">20</span>] = <span class="number">5</span>;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure>

<p>catch.jsp</p>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">    pageEncoding=<span class="string">&quot;UTF-8&quot;</span> isErrorPage=<span class="string">&quot;true&quot;</span>%&gt;</span><br><span class="line">     </span><br><span class="line">&lt;%=exception%&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="JSTL-标准标签库"><a href="#JSTL-标准标签库" class="headerlink" title="JSTL 标准标签库"></a>JSTL 标准标签库</h1><h2 id="set-out-remove"><a href="#set-out-remove" class="headerlink" title="set out remove"></a>set out remove</h2><p>在页面中使用JSTL需要在jsp中通过指令进行设置</p>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ taglib uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> prefix=<span class="string">&quot;c&quot;</span>%&gt;</span><br></pre></td></tr></table></figure>

<p>prefix=”c”表示后续的标签使用都会以<code>&lt;c:</code>开头</p>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:set <span class="keyword">var</span>=<span class="string">&quot;name&quot;</span> value=<span class="string">&quot;$&#123;&#x27;gareen&#x27;&#125;&quot;</span> scope=<span class="string">&quot;request&quot;</span> /&gt;</span><br></pre></td></tr></table></figure>

<p>在作用域request中设置name,相当于<br>&lt;%request.setAttribute(“name”,”gareen”)%&gt;</p>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:out value=<span class="string">&quot;$&#123;name&#125;&quot;</span> /&gt;</span><br></pre></td></tr></table></figure>

<p>相当于 &lt;%=request.getAttribute(“name”)%&gt;</p>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:remove <span class="keyword">var</span>=<span class="string">&quot;name&quot;</span> scope=<span class="string">&quot;request&quot;</span> /&gt;</span><br></pre></td></tr></table></figure>

<p>在作用域request中删掉name,相当于<br>&lt;%request.removeAttribute(“name”)%&gt;</p>
<h2 id="if-else"><a href="#if-else" class="headerlink" title="if else"></a>if else</h2><blockquote>
<p>JSTL通过&lt;c:if test=””&gt;进行条件判断</p>
<p>JSTL没有&lt;c:else ,所以常用的办法是在&lt;c:if的条件里取反</p>
<p>配合if使用的还有通过empty进行为空判断，对象是否为null，字符串长度是否为0，集合长度是否为0</p>
</blockquote>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ taglib uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> prefix=<span class="string">&quot;c&quot;</span>%&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;c:set <span class="keyword">var</span>=<span class="string">&quot;hp&quot;</span> value=<span class="string">&quot;$&#123;10&#125;&quot;</span> scope=<span class="string">&quot;request&quot;</span>/&gt;</span><br><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;hp&lt;5&#125;&quot;</span>&gt;</span><br><span class="line">    &lt;p&gt;这个英雄要无了&lt;/p&gt;</span><br><span class="line">&lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;!(hp&lt;5)&#125;&quot;</span>&gt;</span><br><span class="line">    &lt;p&gt;这个英雄还能在抢救抢救&lt;/p&gt;</span><br><span class="line">&lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">    pageContext.setAttribute(<span class="string">&quot;weapon&quot;</span>, <span class="keyword">null</span>);</span><br><span class="line">    pageContext.setAttribute(<span class="string">&quot;lastwords&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    pageContext.setAttribute(<span class="string">&quot;items&quot;</span>, <span class="keyword">new</span> ArrayList());</span><br><span class="line">%&gt;</span><br><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;empty weapon&#125;&quot;</span>&gt;</span><br><span class="line">    &lt;p&gt;没有装备武器&lt;/p&gt;</span><br><span class="line">&lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;empty lastwords&#125;&quot;</span>/&gt;</span><br><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;empty items&#125;&quot;</span>/&gt;</span><br></pre></td></tr></table></figure>

<h2 id="choose"><a href="#choose" class="headerlink" title="choose"></a>choose</h2><blockquote>
<p>else 功能的标签</p>
</blockquote>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:choose&gt;</span><br><span class="line">    &lt;c:when test=<span class="string">&quot;$&#123;hp&lt;5&#125;&quot;</span>&gt;&lt;/c:when&gt;</span><br><span class="line">    &lt;c:otherwise&gt;&lt;/c:otherwise&gt;</span><br><span class="line">&lt;/c:choose&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:set <span class="keyword">var</span>=<span class="string">&quot;hp&quot;</span> value=<span class="string">&quot;$&#123;3&#125;&quot;</span> scope=<span class="string">&quot;request&quot;</span>/&gt;</span><br><span class="line">&lt;c:choose&gt;</span><br><span class="line">    &lt;c:when test=<span class="string">&quot;$&#123;hp&lt;5&#125;&quot;</span>&gt;</span><br><span class="line">        &lt;p&gt;这个英雄要没了&lt;/p&gt;</span><br><span class="line">    &lt;/c:when&gt;</span><br><span class="line">    &lt;c:otherwise&gt;</span><br><span class="line">        &lt;p&gt;这个英雄觉得自己还能抢救&lt;/p&gt;</span><br><span class="line">    &lt;/c:otherwise&gt;</span><br><span class="line">&lt;/c:choose&gt;</span><br></pre></td></tr></table></figure>

<h2 id="forEach"><a href="#forEach" class="headerlink" title="forEach"></a>forEach</h2><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    List&lt;String&gt; heros = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    heros.add(<span class="string">&quot;塔姆&quot;</span>);</span><br><span class="line">    heros.add(<span class="string">&quot;艾克&quot;</span>);</span><br><span class="line">    heros.add(<span class="string">&quot;巴德&quot;</span>);</span><br><span class="line">    heros.add(<span class="string">&quot;雷克赛&quot;</span>);</span><br><span class="line">    heros.add(<span class="string">&quot;卡莉丝塔&quot;</span>);</span><br><span class="line">    request.setAttribute(<span class="string">&quot;heros&quot;</span>,heros);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;!--使用JSP中的<span class="keyword">for</span>循环来遍历List--&gt;</span><br><span class="line">&lt;table width=<span class="string">&quot;200px&quot;</span> align=<span class="string">&quot;center&quot;</span> border=<span class="string">&quot;1&quot;</span> cellspacing=<span class="string">&quot;0&quot;</span>&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;编号&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;英雄&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        <span class="keyword">int</span> i =<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (String hero:heros)&#123;</span><br><span class="line">            i++;</span><br><span class="line">    %&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;&lt;%=i%&gt;&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;&lt;%=hero%&gt;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;%&#125;%&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;!--使用JSTL中的c:forEach循环边丽List--&gt;</span><br><span class="line">&lt;table width=<span class="string">&quot;200px&quot;</span> align=<span class="string">&quot;center&quot;</span> border=<span class="string">&quot;1&quot;</span> cellspacing=<span class="string">&quot;0&quot;</span>&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;编号&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;英雄&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;c:forEach items=<span class="string">&quot;$&#123;heros&#125;&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;hero&quot;</span> varStatus=<span class="string">&quot;st&quot;</span>&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;c:out value=<span class="string">&quot;$&#123;st.count&#125;&quot;</span>/&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;c:out value=<span class="string">&quot;$&#123;hero&#125;&quot;</span>/&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/c:forEach&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure>

<h2 id="forTokens"><a href="#forTokens" class="headerlink" title="forTokens"></a>forTokens</h2><blockquote>
<p>&lt;c:forTokens 专门用于字符串拆分，并且可以指定多个分隔符</p>
</blockquote>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:set <span class="keyword">var</span>=<span class="string">&quot;heros&quot;</span> value=<span class="string">&quot;塔姆,艾克;巴德|雷克赛!卡莉丝塔&quot;</span>/&gt;</span><br><span class="line">&lt;c:forTokens items=<span class="string">&quot;$&#123;heros&#125;&quot;</span> delims=<span class="string">&quot;,:;|!&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;hero&quot;</span>&gt;</span><br><span class="line">    &lt;c:out value=<span class="string">&quot;$&#123;hero&#125;&quot;</span>/&gt; &lt;br&gt;</span><br><span class="line">&lt;/c:forTokens&gt;</span><br></pre></td></tr></table></figure>

<h2 id="fmt-formatNumber格式化数字"><a href="#fmt-formatNumber格式化数字" class="headerlink" title="fmt:formatNumber格式化数字"></a>fmt:formatNumber格式化数字</h2><blockquote>
<p>fmt标签常用来进行格式化，其中fmt:formatNumber用于格式化数字</p>
</blockquote>
<p>使用前要加上</p>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ taglib uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/fmt&quot;</span>  prefix=<span class="string">&#x27;fmt&#x27;</span> %&gt;  </span><br></pre></td></tr></table></figure>

<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;fmt:formatNumber type=<span class="string">&quot;number&quot;</span> value=<span class="string">&quot;$&#123;money&#125;&quot;</span> minFractionDigits=<span class="string">&quot;2&quot;</span>/&gt;</span><br></pre></td></tr></table></figure>

<p><strong>&lt;fmt:formatNumber</strong> 表示格式化数字<br><strong>minFractionDigits</strong> 小数点至少要有的位数<br><strong>maxFractionDigits</strong> 小数点最多能有的位数</p>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:set <span class="keyword">var</span>=<span class="string">&quot;money&quot;</span> value=<span class="string">&quot;888.8&quot;</span>/&gt;</span><br><span class="line">&lt;c:set <span class="keyword">var</span>=<span class="string">&quot;pi&quot;</span> value=<span class="string">&quot;3.1415926&quot;</span>/&gt;</span><br><span class="line">最少两个小数点</span><br><span class="line">&lt;fmt:formatNumber type=<span class="string">&quot;number&quot;</span> value=<span class="string">&quot;$&#123;money&#125;&quot;</span> minFractionDigits=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;fmt:formatNumber type=<span class="string">&quot;number&quot;</span> value=<span class="string">&quot;$&#123;pi&#125;&quot;</span> maxFractionDigits=<span class="string">&quot;2&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">效果：</span><br><span class="line">最少两个小数点 <span class="number">888.80</span></span><br><span class="line"><span class="number">3.14</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="fmt-formatDate格式化日期"><a href="#fmt-formatDate格式化日期" class="headerlink" title="fmt:formatDate格式化日期"></a>fmt:formatDate格式化日期</h2><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;fmt:formatDate value=<span class="string">&quot;$&#123;now&#125;&quot;</span> pattern=<span class="string">&quot;G yyyy年MM月dd日 E&quot;</span>/&gt;</span><br><span class="line">&lt;fmt:formatDate value=<span class="string">&quot;$&#123;now&#125;&quot;</span> pattern=<span class="string">&quot;a HH:mm:ss.S z&quot;</span>/&gt;</span><br><span class="line">&lt;fmt:formatDate value=<span class="string">&quot;$&#123;now&#125;&quot;</span> pattern=<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>/&gt;</span><br><span class="line">&lt;fmt:formatDate 表示格式化日期</span><br><span class="line">yyyy 表示年份</span><br><span class="line">MM 表示月份</span><br><span class="line">dd 表示日期</span><br><span class="line">E 表示星期几</span><br><span class="line"></span><br><span class="line">a 表示是上午还是下午</span><br><span class="line">HH 表示小时</span><br><span class="line">mm 表示分钟</span><br><span class="line">ss 表示秒</span><br><span class="line">S 表示毫秒</span><br><span class="line">z 表示时区</span><br></pre></td></tr></table></figure>

<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">Date now = <span class="keyword">new</span> Date();</span><br><span class="line">pageContext.setAttribute(<span class="string">&quot;now&quot;</span>,now);</span><br><span class="line">%&gt;</span><br><span class="line">完整日期：&lt;fmt:formatDate value=<span class="string">&quot;$&#123;now&#125;&quot;</span> pattern=<span class="string">&quot;G yyyy年MM月dd日 E&quot;</span>/&gt;&lt;br&gt;</span><br><span class="line">完整时间: &lt;fmt:formatDate value=<span class="string">&quot;$&#123;now&#125;&quot;</span> pattern=<span class="string">&quot;a HH:mm:ss.S z&quot;</span>/&gt;&lt;br&gt;</span><br><span class="line">常见格式: &lt;fmt:formatDate value=<span class="string">&quot;$&#123;now&#125;&quot;</span> pattern=<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>/&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="fn"><a href="#fn" class="headerlink" title="fn:"></a>fn:</h2><blockquote>
<p>fn标签提供各种使用功能，首先使用之前加入如下指令</p>
<p>&lt;%@ taglib prefix=”fn” uri=”<a href="http://java.sun.com/jsp/jstl/functions&quot;">http://java.sun.com/jsp/jstl/functions&quot;</a> %&gt;</p>
</blockquote>
<p>用法：</p>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;fn:substring(name, <span class="number">0</span>, <span class="number">5</span>)&#125;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th><strong>函数</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>fn:contains(string, substring)</td>
<td>如果参数string中包含参数substring，返回true</td>
</tr>
<tr>
<td>fn:containsIgnoreCase(string, substring)</td>
<td>如果参数string中包含参数substring（忽略大小写），返回true</td>
</tr>
<tr>
<td>fn:endsWith(string, suffix)</td>
<td>如果参数 string 以参数suffix结尾，返回true</td>
</tr>
<tr>
<td>fn:escapeXml(string)</td>
<td>将有特殊意义的XML (和HTML)转换为对应的XML character entity code，并返回</td>
</tr>
<tr>
<td>fn:indexOf(string, substring)</td>
<td>返回参数substring在参数string中第一次出现的位置</td>
</tr>
<tr>
<td>fn:join(array, separator)</td>
<td>将一个给定的数组array用给定的间隔符separator串在一起，组成一个新的字符串并返回。</td>
</tr>
<tr>
<td>fn:length(item)</td>
<td>返回参数item中包含元素的数量。参数Item类型是数组、collection或者String。如果是String类型,返回值是String中的字符数。</td>
</tr>
<tr>
<td>fn:replace(string, before, after)</td>
<td>返回一个String对象。用参数after字符串替换参数string中所有出现参数before字符串的地方，并返回替换后的结果</td>
</tr>
<tr>
<td>fn:split(string, separator)</td>
<td>返回一个数组，以参数separator 为分割符分割参数string，分割后的每一部分就是数组的一个元素</td>
</tr>
<tr>
<td>fn:startsWith(string, prefix)</td>
<td>如果参数string以参数prefix开头，返回true</td>
</tr>
<tr>
<td>fn:substring(string, begin, end)</td>
<td>返回参数string部分字符串, 从参数begin开始到参数end位置，包括end位置的字符</td>
</tr>
<tr>
<td>fn:substringAfter(string, substring)</td>
<td>返回参数substring在参数string中后面的那一部分字符串</td>
</tr>
<tr>
<td>fn:substringBefore(string, substring)</td>
<td>返回参数substring在参数string中前面的那一部分字符串</td>
</tr>
<tr>
<td>fn:toLowerCase(string)</td>
<td>将参数string所有的字符变为小写，并将其返回</td>
</tr>
<tr>
<td>fn:toUpperCase(string)</td>
<td>将参数string所有的字符变为大写，并将其返回</td>
</tr>
<tr>
<td>fn:trim(string)</td>
<td>去除参数string 首尾的空格，并将其返回</td>
</tr>
</tbody></table>
<h1 id="EL-表达式语言"><a href="#EL-表达式语言" class="headerlink" title="EL 表达式语言"></a>EL 表达式语言</h1><h2 id="取值"><a href="#取值" class="headerlink" title="取值"></a>取值</h2><blockquote>
<p>保证EL表达式能够正常使用，需要在&lt;%@page 标签里加上<code>isELIgnored=&quot;false&quot;</code></p>
</blockquote>
<p>对比：</p>
<p>JSTL的输出：&lt;c:out value=”${name}”/&gt;</p>
<p>EL的输出：${name}</p>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:set <span class="keyword">var</span>=<span class="string">&quot;name&quot;</span> value=<span class="string">&quot;$&#123;&#x27;gareen&#x27;&#125;&quot;</span> scope=<span class="string">&quot;request&quot;</span>/&gt;</span><br><span class="line">通过标签获取name：&lt;c:out value=<span class="string">&quot;$&#123;name&#125;&quot;</span>/&gt;&lt;br&gt;</span><br><span class="line">通过EL获取name：$&#123;name&#125;</span><br></pre></td></tr></table></figure>

<h2 id="作用域优先级"><a href="#作用域优先级" class="headerlink" title="作用域优先级"></a>作用域优先级</h2><blockquote>
<p>EL会按照从高到低的优先级顺序获取 </p>
<p>pageContext&gt;request&gt;session&gt;application</p>
</blockquote>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:set <span class="keyword">var</span>=<span class="string">&quot;name&quot;</span> value=<span class="string">&quot;$&#123;&#x27;gareen-pageContext&#x27;&#125;&quot;</span> scope=<span class="string">&quot;page&quot;</span>/&gt;</span><br><span class="line">&lt;c:set <span class="keyword">var</span>=<span class="string">&quot;name&quot;</span> value=<span class="string">&quot;$&#123;&#x27;gareen-request&#x27;&#125;&quot;</span> scope=<span class="string">&quot;request&quot;</span>/&gt;</span><br><span class="line">&lt;c:set <span class="keyword">var</span>=<span class="string">&quot;name&quot;</span> value=<span class="string">&quot;$&#123;&#x27;gareen-session&#x27;&#125;&quot;</span> scope=<span class="string">&quot;session&quot;</span>/&gt;</span><br><span class="line">&lt;c:set <span class="keyword">var</span>=<span class="string">&quot;name&quot;</span> value=<span class="string">&quot;$&#123;&#x27;gareen-application&#x27;&#125;&quot;</span> scope=<span class="string">&quot;application&quot;</span>/&gt;</span><br><span class="line"><span class="number">4</span>个作用域都有name，优先获取出来的是：$&#123;name&#125;</span><br></pre></td></tr></table></figure>

<h2 id="JavaBean"><a href="#JavaBean" class="headerlink" title="JavaBean"></a>JavaBean</h2><blockquote>
<p>JavaBean的标准</p>
<ol>
<li>提供无参public的构造方法(默认提供)</li>
<li>每个属性，都有public的getter和setter</li>
<li>如果属性是boolean,那么就对应is和setter方法</li>
</ol>
</blockquote>
<h3 id="获取JavaBean的属性"><a href="#获取JavaBean的属性" class="headerlink" title="获取JavaBean的属性"></a>获取JavaBean的属性</h3><blockquote>
<p>通过 . 操作就可以，eg:${hero.name} 就会自动调用getName方法</p>
<p><strong>注：</strong> 如果属性是boolean类型，那么就会自动调用isXXX方法了</p>
</blockquote>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">Hero hero = <span class="keyword">new</span> Hero();</span><br><span class="line">hero.setName(<span class="string">&quot;盖伦&quot;</span>);</span><br><span class="line">hero.setHp(<span class="number">616</span>);</span><br><span class="line">request.setAttribute(<span class="string">&quot;hero&quot;</span>,hero);</span><br><span class="line">%&gt;</span><br><span class="line">英雄名字：$&#123;hero.name&#125;&lt;br&gt;</span><br><span class="line">英雄血量：$&#123;hero.hp&#125;</span><br></pre></td></tr></table></figure>

<h2 id="取参"><a href="#取参" class="headerlink" title="取参"></a>取参</h2><blockquote>
<p>request.getParameter(“name”) 这样的形式获取浏览器传递过来的参数</p>
</blockquote>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;param.name&#125;</span><br></pre></td></tr></table></figure>

<h2 id="eq"><a href="#eq" class="headerlink" title="eq"></a>eq</h2><blockquote>
<p>简化了JSTL的c:if 和 c:choose代码</p>
</blockquote>
<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;killNumber ge <span class="number">10</span>? <span class="string">&quot;超神&quot;</span>:<span class="string">&quot;还没超神&quot;</span> &#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>eq相等 ne、neq不相等，<br>gt大于， lt小于<br>gt大于， lt小于<br>gte、ge大于等于<br>lte、le 小于等于<br>not非 mod求模<br>is [not] div by是否能被某数整除<br>is [not] even是否为偶数<br>is [not] odd是否为奇</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> JSP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JDBC]]></title>
      <url>/2021/07/20/JDBC/</url>
      <content type="html"><![CDATA[<h1 id="JDBC执行步骤"><a href="#JDBC执行步骤" class="headerlink" title="JDBC执行步骤"></a>JDBC执行步骤</h1><ol>
<li>加载驱动</li>
<li>用户信息和url</li>
<li>连接数据库</li>
<li>生成执行SQL对象</li>
<li>执行sql的对象去执行SQL</li>
<li>释放连接</li>
</ol>
<h1 id="PreparedStatement"><a href="#PreparedStatement" class="headerlink" title="PreparedStatement"></a>PreparedStatement</h1><blockquote>
<p>和 Statement一样，PreparedStatement也是用来执行sql语句的<br>与创建Statement不同的是，需要根据sql语句创建PreparedStatement<br>除此之外，还能够通过设置参数，指定相应的值，而不是Statement那样使用字符串拼接</p>
</blockquote>
<blockquote>
<p><strong>Statement</strong> 需要进行字符串拼接，可读性和维护性比较差</p>
<p>String sql = “insert into hero values(null,”+”‘提莫’”+”,”+313.0f+”,”+50+”)”;</p>
<p><strong>PreparedStatement</strong> 使用参数设置，可读性好，不易犯错</p>
<p>String sql = “insert into hero values(null,?,?,?)”;</p>
</blockquote>
<blockquote>
<p>PreparedStatement有预编译机制，性能比Statement更快</p>
</blockquote>
<blockquote>
<p>假设name是用户提交来的数据</p>
<p>String name = “‘盖伦’ OR 1=1”;</p>
<p>使用Statement就需要进行字符串拼接<br>拼接出来的语句是：</p>
<p>select * from hero where name = ‘盖伦’ OR 1=1</p>
<p>因为有OR 1=1，这是恒成立的<br>那么就会把所有的英雄都查出来，而不只是盖伦<br>如果Hero表里的数据是海量的，比如几百万条，<strong>把这个表里的数据全部查出来</strong><br>会让数据库负载变高，CPU100%，内存消耗光，<strong>响应变得极其缓慢</strong></p>
<p>而PreparedStatement使用的是<strong>参数设置</strong>，就不会有这个问题</p>
</blockquote>
<h1 id="execute-与-executeUpdate"><a href="#execute-与-executeUpdate" class="headerlink" title="execute 与 executeUpdate"></a>execute 与 executeUpdate</h1><p>相同点：<strong>execute</strong>与<strong>executeUpdate</strong>的相同点：都可以执行增加，删除，修改</p>
<p>不同点：</p>
<p>1、execute<strong>可以执行查询语句</strong></p>
<p>2、然后通过getResultSet，把结果集取出来<br>3、executeUpdate<strong>不能执行查询语句</strong></p>
<p>4、execute<strong>返回boolean类型</strong>，true表示执行的是查询语句，false表示执行的是insert,delete,update等等<br>5、executeUpdate<strong>返回的是int</strong>，表示有多少条数据受到了影响</p>
<h2 id="特殊操作"><a href="#特殊操作" class="headerlink" title="特殊操作"></a>特殊操作</h2><h3 id="获取自增长id"><a href="#获取自增长id" class="headerlink" title="获取自增长id"></a>获取自增长id</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JDBC通过getGeneratedKeys获取该id</span></span><br><span class="line">          ResultSet rs = ps.getGeneratedKeys();</span><br></pre></td></tr></table></figure>

<h3 id="获取表的元数据"><a href="#获取表的元数据" class="headerlink" title="获取表的元数据"></a>获取表的元数据</h3><p>元数据概念：<br>和数据库服务器相关的数据，比如数据库版本，有哪些表，表有哪些字段，字段类型是什么等等。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> (Connection c = DriverManager.getConnection(<span class="string">&quot;jdbc:mysql://127.0.0.1:3306/how2java?characterEncoding=UTF-8&quot;</span>,<span class="string">&quot;root&quot;</span>, <span class="string">&quot;admin&quot;</span>);) &#123;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 查看数据库层面的元数据</span></span><br><span class="line">    <span class="comment">// 即数据库服务器版本，驱动版本，都有哪些数据库等等</span></span><br><span class="line">  </span><br><span class="line">    DatabaseMetaData dbmd = c.getMetaData();</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 获取数据库服务器产品名称</span></span><br><span class="line">    System.out.println(<span class="string">&quot;数据库产品名称:\t&quot;</span>+dbmd.getDatabaseProductName());</span><br><span class="line">    <span class="comment">// 获取数据库服务器产品版本号</span></span><br><span class="line">    System.out.println(<span class="string">&quot;数据库产品版本:\t&quot;</span>+dbmd.getDatabaseProductVersion());</span><br><span class="line">    <span class="comment">// 获取数据库服务器用作类别和表名之间的分隔符 如test.user</span></span><br><span class="line">    System.out.println(<span class="string">&quot;数据库和表分隔符:\t&quot;</span>+dbmd.getCatalogSeparator());</span><br><span class="line">    <span class="comment">// 获取驱动版本</span></span><br><span class="line">    System.out.println(<span class="string">&quot;驱动版本:\t&quot;</span>+dbmd.getDriverVersion());</span><br><span class="line">  </span><br><span class="line">    System.out.println(<span class="string">&quot;可用的数据库列表：&quot;</span>);</span><br><span class="line">    <span class="comment">// 获取数据库名称</span></span><br><span class="line">    ResultSet rs = dbmd.getCatalogs();</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;数据库名称:\t&quot;</span>+rs.getString(<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br></pre></td></tr></table></figure>

<h1 id="事务没学！！！"><a href="#事务没学！！！" class="headerlink" title="事务没学！！！"></a>事务没学！！！</h1><h1 id="ORM"><a href="#ORM" class="headerlink" title="ORM"></a>ORM</h1><blockquote>
<p>对象和数据库的映射</p>
<p>一个对象对应数据库里的一条数据</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cloud;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestJDBC3self</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Hero <span class="title">get</span><span class="params">(<span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line">           Hero hero = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            String sql = <span class="string">&quot;select * from hero where id = &quot;</span> + id;</span><br><span class="line">            <span class="keyword">try</span>(Connection c = DriverManager.getConnection(<span class="string">&quot;jdbc:mysql://127.0.0.1:3306/how2java?characterEncoding=UTF-8&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;wy20001003&quot;</span>);</span><br><span class="line">                PreparedStatement p = c.prepareStatement(sql)</span><br><span class="line">            ) &#123;</span><br><span class="line"></span><br><span class="line">                ResultSet r =  p.executeQuery(sql);</span><br><span class="line">                <span class="keyword">while</span> (r.next())&#123;</span><br><span class="line">                    hero = <span class="keyword">new</span> Hero();</span><br><span class="line">                    String name = r.getString(<span class="number">2</span>);</span><br><span class="line">                    <span class="keyword">float</span> hp = r.getFloat(<span class="number">3</span>);</span><br><span class="line">                    <span class="keyword">int</span> damage = r.getInt(<span class="number">4</span>);</span><br><span class="line">                    <span class="keyword">int</span> id1 = r.getInt(<span class="number">1</span>);</span><br><span class="line">                    hero.id = id1;</span><br><span class="line">                    hero.hp = hp;</span><br><span class="line">                    hero.damage = damage;</span><br><span class="line">                    hero.name = name;</span><br><span class="line">                &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> hero;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Hero h = get(<span class="number">666</span>);</span><br><span class="line">                System.out.println(h.name);</span><br><span class="line">            &#125;<span class="keyword">catch</span> (NullPointerException n)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;没有此条数据！！！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="DAO"><a href="#DAO" class="headerlink" title="DAO"></a>DAO</h2><blockquote>
<p>DAO=<strong>D</strong>ata <strong>A</strong>ccess  <strong>O</strong>bject</p>
<p>数据访问对象</p>
<p>实际上就是运用了练习-ORM中的思路，把数据库相关的操作都封装在这个类里面，其他地方看不到JDBC的代码</p>
</blockquote>
<p>接口DAO</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DAO</span> </span>&#123;</span><br><span class="line">    <span class="comment">//增加</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(Hero hero)</span></span>;</span><br><span class="line">    <span class="comment">//修改</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Hero hero)</span></span>;</span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">    <span class="comment">//获取</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Hero <span class="title">get</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">    <span class="comment">//分页查询</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Hero&gt; <span class="title">list</span><span class="params">(<span class="keyword">int</span> start,<span class="keyword">int</span> count)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>实现类</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HeroDAO</span> <span class="keyword">implements</span> <span class="title">DAO</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HeroDAO</span><span class="params">()</span> </span>&#123;<span class="comment">//把驱动直接放在HeroDAO的构造方法中</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(<span class="string">&quot;jdbc:mysql://127.0.0.1:3306/how2java?characterEncoding=UTF-8&quot;</span>, <span class="string">&quot;root&quot;</span>,</span><br><span class="line">                <span class="string">&quot;wy20001003&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getTotal</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">try</span> (Connection c = getConnection(); Statement s = c.createStatement())&#123;</span><br><span class="line">            String sql = <span class="string">&quot;select count(*) from hero&quot;</span>;</span><br><span class="line">            ResultSet r = s.executeQuery(sql);</span><br><span class="line">            <span class="keyword">while</span> (r.next())&#123;</span><br><span class="line">                total +=<span class="number">1</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> total;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(Hero hero)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;insert into hero values(null;?;?;?)&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> (Connection c = getConnection(); PreparedStatement ps = c.prepareStatement(sql);)&#123;</span><br><span class="line">            ps.setInt(<span class="number">3</span>,hero.damage);</span><br><span class="line">            ps.setString(<span class="number">1</span>,hero.name);</span><br><span class="line">            ps.setFloat(<span class="number">2</span>,hero.hp);</span><br><span class="line">            ps.execute();</span><br><span class="line">            ResultSet rs= ps.getGeneratedKeys();</span><br><span class="line">            <span class="keyword">while</span> (rs.next())</span><br><span class="line">            &#123;</span><br><span class="line">                hero.id = rs.getInt(<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Hero hero)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;update hero set name=?, hp = ? , damage = ? where id = ?&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> (Connection c = getConnection(); PreparedStatement ps = c.prepareStatement(sql);)&#123;</span><br><span class="line">            ps.setString(<span class="number">1</span>, hero.name);</span><br><span class="line">            ps.setFloat(<span class="number">2</span>, hero.hp);</span><br><span class="line">            ps.setInt(<span class="number">3</span>, hero.damage);</span><br><span class="line">            ps.setInt(<span class="number">4</span>, hero.id);</span><br><span class="line">            ps.execute();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (SQLException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> (Connection c = getConnection(); Statement s = c.createStatement();)&#123;</span><br><span class="line">            String sql = <span class="string">&quot;delete from hero where id = &quot;</span> + id;</span><br><span class="line">            s.execute(sql);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (SQLException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Hero <span class="title">get</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        Hero hero = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> (Connection c = getConnection(); Statement s = c.createStatement();)&#123;</span><br><span class="line">            String sql = <span class="string">&quot;select * from hero where id = &quot;</span> + id;</span><br><span class="line">            ResultSet rs = s.executeQuery(sql);</span><br><span class="line">           <span class="keyword">if</span> (rs.next())</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                 hero = <span class="keyword">new</span> Hero();</span><br><span class="line">                 hero.name = rs.getString(<span class="number">2</span>);</span><br><span class="line">                 hero.hp = rs.getFloat(<span class="string">&quot;hp&quot;</span>);</span><br><span class="line">                 hero.damage = rs.getInt(<span class="number">4</span>);</span><br><span class="line">                 hero.id = id;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (SQLException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> hero;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Hero&gt; <span class="title">list</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list(<span class="number">0</span>,Short.MAX_VALUE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Hero&gt; <span class="title">list</span><span class="params">(<span class="keyword">int</span> start, <span class="keyword">int</span> count)</span> </span>&#123;</span><br><span class="line">        List&lt;Hero&gt; heros = <span class="keyword">null</span>;</span><br><span class="line">        String sql = <span class="string">&quot;select * from hero order by id limit ?,?&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> (Connection c = getConnection(); PreparedStatement ps = c.prepareStatement(sql);)&#123;</span><br><span class="line">            ps.setInt(<span class="number">1</span>,start);</span><br><span class="line">            ps.setInt(<span class="number">2</span>,count);</span><br><span class="line">            ResultSet rs =ps.executeQuery();</span><br><span class="line">            <span class="keyword">while</span> (rs.next())&#123;</span><br><span class="line">                  Hero hero = <span class="keyword">new</span> Hero();</span><br><span class="line">                  hero.id = rs.getInt(<span class="number">1</span>);</span><br><span class="line">                  hero.name = rs.getString(<span class="number">2</span>);</span><br><span class="line">                  hero.hp = rs.getFloat(<span class="number">3</span>);</span><br><span class="line">                  hero.damage = rs.getInt(<span class="number">4</span>);</span><br><span class="line">                  heros.add(hero);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (SQLException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> heros;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="数据库连接池（暂时没学）"><a href="#数据库连接池（暂时没学）" class="headerlink" title="数据库连接池（暂时没学）"></a>数据库连接池（暂时没学）</h2><blockquote>
<p>当有多个线程，每个线程都需要连接数据库执行SQL语句的话，那么每个线程都会创建一个连接，并且在使用完毕后，关闭连接。</p>
<p>创建连接和关闭连接的过程也是比较消耗时间的，当多线程并发的时候，系统就会变得很卡顿。</p>
<p>同时，一个数据库同时支持的连接总数也是有限的，如果多线程并发量很大，那么数据库连接的总数就会被消耗光，后续线程发起的数据库连接就会失败。</p>
</blockquote>
<blockquote>
<p>与传统方式不同，连接池在使用之前，就会创建好一定数量的连接。<br>如果有任何线程需要使用连接，那么就从连接池里面<strong>借用</strong>，<strong>而不是自己重新创建</strong>.<br>使用完毕后，又把这个连接<strong>归还</strong>给连接池供下一次或者其他线程使用。<br>倘若发生多线程并发情况，连接池里的连接被<strong>借用光</strong>了，那么其他线程就会临时等待，直到有连接被<strong>归还</strong>回来，再继续使用。<br>整个过程，这些连接都<strong>不会被关闭</strong>，而是不断的被循环使用，从而节约了启动和关闭连接的时间。</p>
</blockquote>
<p>学习链接：<a href="https://how2j.cn/k/jdbc/jdbc-connection-pool/610.html#nowhere">https://how2j.cn/k/jdbc/jdbc-connection-pool/610.html#nowhere</a></p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> JDBC </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Servlet]]></title>
      <url>/2021/07/20/Servlet/</url>
      <content type="html"><![CDATA[<h1 id="获取用户名和密码"><a href="#获取用户名和密码" class="headerlink" title="获取用户名和密码"></a>获取用户名和密码</h1><blockquote>
<p>继承HttpServlet类的子类中重写两个方法，doGet() 和 doPost()</p>
<p>doPost()方法中通过<code> request.getParameter()</code>来获取用户名和密码</p>
</blockquote>
<blockquote>
<p>每增加一个继承了HttpServlet的子类，在web.xml中就得新增映射</p>
</blockquote>
<p>继承了HttpServlet的子类getuser</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">getuser</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String username = req.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        String pwd = req.getParameter(<span class="string">&quot;pwd&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;用户名：&quot;</span>+username);</span><br><span class="line">        System.out.println(<span class="string">&quot;密码：&quot;</span>+pwd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>前端内容：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;getuser&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line">    密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>web.xml配置文件</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">   <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>getuser<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.example.testCode.getuser<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>getuser<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/getuser<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="判断用户名和密码是否正确-暂时没连数据库"><a href="#判断用户名和密码是否正确-暂时没连数据库" class="headerlink" title="判断用户名和密码是否正确(暂时没连数据库)"></a>判断用户名和密码是否正确(暂时没连数据库)</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">getuser</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String username = req.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        String pwd = req.getParameter(<span class="string">&quot;pwd&quot;</span>);</span><br><span class="line">        String html = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&quot;admin&quot;</span>.equals(username) &amp;&amp; <span class="string">&quot;123&quot;</span>.equals(pwd))</span><br><span class="line">            html=<span class="string">&quot;&lt;h1&gt;successful&lt;/h1&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            html=<span class="string">&quot;&lt;h1&gt;fail&lt;/h1&gt;&quot;</span>;</span><br><span class="line">        PrintWriter printWriter = resp.getWriter();</span><br><span class="line">        printWriter.println(html);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="Servlet调用流程"><a href="#Servlet调用流程" class="headerlink" title="Servlet调用流程"></a>Servlet调用流程</h1><ol>
<li>login.html:以post传参</li>
<li>表单数据提交到/login路径</li>
<li>进入web.xml找到对应的Servlet，定位到相应的类</li>
<li>实例化Servlet对象，进入Servlet类中发现没有实例存在，则调用类的无参构造方法实例化一个对象以备后续使用</li>
<li>调用doGet和doPost方法，根据表单传参方法进行函数调用</li>
<li>request获取参数，通过request.Parameter()获取</li>
<li>response设置相应：把html字符串设置在response对象上</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PrintWriter pw = response.getWriter();</span><br><span class="line">pw.println(html);</span><br></pre></td></tr></table></figure>

<p>​    8.tomcat吧html传递给浏览器</p>
<h1 id="service"><a href="#service" class="headerlink" title="service()"></a>service()</h1><h2 id="doGet-方法"><a href="#doGet-方法" class="headerlink" title="doGet()方法"></a>doGet()方法</h2><p>哪些是get方式：</p>
<ol>
<li>form默认提交方式</li>
<li>a标签访问</li>
<li>地址栏输入</li>
<li>ajax指定使用get方式</li>
</ol>
<h2 id="doPost-方法"><a href="#doPost-方法" class="headerlink" title="doPost()方法"></a>doPost()方法</h2><p>哪些是post方式：</p>
<ol>
<li>form表单设置为post</li>
<li>ajax指定post方式</li>
</ol>
<h2 id="service-1"><a href="#service-1" class="headerlink" title="service()"></a>service()</h2><p>在doGet和doPost方法之前，都会先执行service()方法，子类继承了HttpServlet，同时也继承了service()方法</p>
<h1 id="Servlet中文问题"><a href="#Servlet中文问题" class="headerlink" title="Servlet中文问题"></a>Servlet中文问题</h1><ul>
<li>现在html文件中加入一句话，告诉浏览器发送给服务器是使用UTF-8编码</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>在servlet中写入如下这句话，放在获取参数的语句之前</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">request.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>); <span class="comment">//设置编码方式</span></span><br></pre></td></tr></table></figure>

<ul>
<li>返回中文响应,设置 PrintWriter 对象之前</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.setContentType(<span class="string">&quot;text/html; charset=UTF-8&quot;</span>);</span><br></pre></td></tr></table></figure>

<h1 id="Servlet生命周期"><a href="#Servlet生命周期" class="headerlink" title="Servlet生命周期"></a>Servlet生命周期</h1><ul>
<li>实例化：浏览器输入一个路径，对应的servlet被调用时，对应的Serlvet就会被实例化，自动调用该类构造方法，无论访问多少次，该构造方法只会在第一次访问时被调用，其余次数不管</li>
<li>初始化：子类继承HttpServlet中的init(ServletConfig)方法，与实例化一样，也只会执行一次</li>
<li>提供服务：service()方法，在这里编写我们的业务代码，通过浏览器的传参方式判断，调用doGet还是doPsot</li>
<li>销毁：destroy(),在web应用自动重启时，或者关系tomcat时会被调用</li>
<li>被回收：Servlet被销毁后，满足垃圾回收条件，当下一次垃圾回收来临时，就有可能被回收</li>
</ul>
<h1 id="Servlet跳转"><a href="#Servlet跳转" class="headerlink" title="Servlet跳转"></a>Servlet跳转</h1><h2 id="服务端跳转"><a href="#服务端跳转" class="headerlink" title="服务端跳转"></a>服务端跳转</h2><p>服务端跳转浏览器地址栏的路径不发生改变，还是原来的/login</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">request.getRequestDispatcher(<span class="string">&quot;success.html&quot;</span>).forward(request, response);</span><br></pre></td></tr></table></figure>

<h2 id="客户端跳转"><a href="#客户端跳转" class="headerlink" title="客户端跳转"></a>客户端跳转</h2><p>地址栏路径发生改变</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.sendRedirect(<span class="string">&quot;fail.html&quot;</span>);</span><br></pre></td></tr></table></figure>

<h2 id="服务端与客户端跳转原理"><a href="#服务端与客户端跳转原理" class="headerlink" title="服务端与客户端跳转原理"></a>服务端与客户端跳转原理</h2><p>服务端：服务器响应后在<strong>服务器</strong>内部访问网页，然后把网页内容提取出来发送给浏览器，浏览器进行展示</p>
<p>客户端：服务器发送一条特殊消息给浏览器让<strong>浏览器</strong>去访问某网页，然后服务端获取了某网页内容后发送给浏览器，浏览器进行展示</p>
<h1 id="Servlet自启动"><a href="#Servlet自启动" class="headerlink" title="Servlet自启动"></a>Servlet自启动</h1><p>解释：有时tomcat一启动就需要执行一些初始化代码，但是一些初始化代码只有在访问相应的路径以后才能执行，这时就需要自启动，来一开始就执行一些初始化代码</p>
<p>使用：</p>
<p>​        在web.xml中某个servlet中设置</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>x<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span>//x表示启动顺序，x越小，优先级越高，相应的Servlet中的初始化代码越先被启动，在1~99之间，</span><br></pre></td></tr></table></figure>

<h1 id="request常见方法"><a href="#request常见方法" class="headerlink" title="request常见方法"></a>request常见方法</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">request.getRequestURL(): <span class="comment">//浏览器发出请求时的完整URL，包括协议 主机名 端口(如果有)&quot;</span></span><br><span class="line">request.getRequestURI(): <span class="comment">//浏览器发出请求的资源名部分，去掉了协议和主机名&quot;</span></span><br><span class="line">request.getQueryString():<span class="comment">// 请求行中的参数部分，只能显示以get方式发出的参数，post方式的看不到</span></span><br><span class="line">request.getRemoteAddr(): <span class="comment">//浏览器所处于的客户机的IP地址</span></span><br><span class="line">request.getRemoteHost(): <span class="comment">//浏览器所处于的客户机的主机名</span></span><br><span class="line">request.getRemotePort(): <span class="comment">//浏览器所处于的客户机使用的网络端口</span></span><br><span class="line">request.getLocalAddr(): <span class="comment">//服务器的IP地址</span></span><br><span class="line">request.getLocalName(): <span class="comment">//服务器的主机名</span></span><br><span class="line">request.getMethod(): <span class="comment">//得到客户机请求方式一般是GET或者POST</span></span><br></pre></td></tr></table></figure>

<h2 id="获取参数"><a href="#获取参数" class="headerlink" title="获取参数"></a>获取参数</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">request.getParameter(): <span class="comment">//是常见的方法，用于获取单值的参数</span></span><br><span class="line">request.getParameterValues(): <span class="comment">//用于获取具有多值的参数，比如注册时候提交的 &quot;hobits&quot;，可以是多选的。</span></span><br><span class="line">request.getParameterMap(): <span class="comment">//用于遍历所有的参数，并返回Map类型。</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;获取单值参数name:&quot;</span> + request.getParameter(<span class="string">&quot;name&quot;</span>));<span class="comment">//获取单值参数name:2019083222</span></span><br><span class="line"></span><br><span class="line">       String[] hobits = request.getParameterValues(<span class="string">&quot;hobits&quot;</span>);<span class="comment">//获取具有多值的参数hobits: [lol, dota]</span></span><br><span class="line">       System.out.println(<span class="string">&quot;获取具有多值的参数hobits: &quot;</span> + Arrays.asList(hobits));</span><br><span class="line"></span><br><span class="line">       System.out.println(<span class="string">&quot;通过 getParameterMap 遍历所有的参数： &quot;</span>);</span><br><span class="line">       Map&lt;String, String[]&gt; parameters = request.getParameterMap();</span><br><span class="line">       System.out.println(<span class="string">&quot;************&quot;</span>);</span><br><span class="line">       System.out.println(parameters);</span><br><span class="line"></span><br><span class="line">       Set&lt;String&gt; paramNames = parameters.keySet();<span class="comment">//以数组形式获取key</span></span><br><span class="line"></span><br><span class="line">       <span class="keyword">for</span> (String param : paramNames) &#123;</span><br><span class="line">           String[] value = parameters.get(param);</span><br><span class="line">           System.out.println(param + <span class="string">&quot;:&quot;</span> + Arrays.asList(value));<span class="comment">//name:[2019083222] hobits: [lol, dota]  </span></span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;String,String[]&gt; parameters = req.getParameterMap();<span class="comment">//以键值对的形式存在</span></span><br><span class="line">Set&lt;String&gt; paramNames = parameters.keySet();<span class="comment">//以数组的形式获取所有的key</span></span><br><span class="line"><span class="keyword">for</span>(String m : paramNames)</span><br><span class="line">String[] value = parameters.get(m);<span class="comment">//获取键值对中,key对应的所有值</span></span><br></pre></td></tr></table></figure>

<h2 id="获取头信息"><a href="#获取头信息" class="headerlink" title="获取头信息"></a>获取头信息</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">request.getHeader() <span class="comment">//获取浏览器传递过来的头信息。比如getHeader(&quot;user-agent&quot;) 可以获取浏览器的基本资料，这样就能判断是firefox、IE、chrome、或者是safari浏览器</span></span><br><span class="line">request.getHeaderNames() <span class="comment">//获取浏览器所有的头信息名称，根据头信息名称就能遍历出所有的头信息</span></span><br></pre></td></tr></table></figure>

<h2 id="服务端传参"><a href="#服务端传参" class="headerlink" title="服务端传参"></a>服务端传参</h2><p>setAttribute和getAttribute用来在服务端跳转，不同的Servlet之间进行共享，在MVC章节细讲。</p>
<h1 id="response-用法"><a href="#response-用法" class="headerlink" title="response 用法"></a>response 用法</h1><h2 id="设置响应内容"><a href="#设置响应内容" class="headerlink" title="设置响应内容"></a>设置响应内容</h2><ul>
<li>通过response.getWriter()获取一个PrintWriter对象</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PrintWriter pw= response.getWriter();</span><br></pre></td></tr></table></figure>

<ul>
<li>可以使用println(),append(),write(),format()等等方法设置返回给浏览器的html内容。</li>
</ul>
<h2 id="设置相应格式"><a href="#设置相应格式" class="headerlink" title="设置相应格式"></a>设置相应格式</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>“text/html” 是即格式 ，在request获取头信息 中对应的request.getHeader(“accept”).<br>“text/html” 是存在的，表示浏览器可以识别这种格式，如果换一个其他的格式， 比如 “text/lol” ，浏览器不能识别，那么打开此servlet就会弹出一个下载的对话框。</p>
<p>这样的手段也就常常用于实现下载功能</p>
</blockquote>
<h2 id="设置响应编码"><a href="#设置响应编码" class="headerlink" title="设置响应编码"></a>设置响应编码</h2><ol>
<li><p>```java<br>response.setContentType(“text/html; charset=UTF-8”);<br>//不仅发送到浏览器的内容会使用UTF-8编码，而且还通知浏览器使用UTF-8编码方式进行显示。所以总能正常显示中文</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">2. ```java</span><br><span class="line">   response.setCharacterEncoding(&quot;UTF-8&quot;);</span><br><span class="line">   //仅仅是发送的浏览器的内容是UTF-8编码的，至于浏览器是用哪种编码方式显示不管。 所以当浏览器的显示编码方式不是UTF-8的时候，就会看到乱码，需要手动再进行一次设置。</span><br></pre></td></tr></table></figure></li>
<li><p>这两种方式都需要在response.getWriter调用之前执行才能生效。</p>
</li>
</ol>
<h2 id="设置不使用缓存"><a href="#设置不使用缓存" class="headerlink" title="设置不使用缓存"></a>设置不使用缓存</h2><blockquote>
<p>使用缓存可以加快页面的加载，降低服务端的负担。但是也可能看到过时的信息，可以通过如下手段通知浏览器不要使用缓存</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">response.setDateHeader(<span class="string">&quot;Expires&quot;</span>,<span class="number">0</span> );</span><br><span class="line">response.setHeader(<span class="string">&quot;Cache-Control&quot;</span>,<span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">response.setHeader(<span class="string">&quot;pragma&quot;</span>,<span class="string">&quot;no-cache&quot;</span>);</span><br></pre></td></tr></table></figure>

<h1 id="Servlet上传文件-暂时不会"><a href="#Servlet上传文件-暂时不会" class="headerlink" title="Servlet上传文件(暂时不会)"></a>Servlet上传文件(暂时不会)</h1><p>注意：</p>
<ol>
<li>form必须是post，get不能上传文件，还需加<code>enctype=&quot;multipart/form-data&quot;</code>表示提交的数据是二进制文件</li>
<li>type必须为file</li>
</ol>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Servlet </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[某图书馆热门数据爬取]]></title>
      <url>/2021/07/19/%E6%9F%90%E5%9B%BE%E4%B9%A6%E9%A6%86%E7%83%AD%E9%97%A8%E6%95%B0%E6%8D%AE%E7%88%AC%E5%8F%96/</url>
      <content type="html"><![CDATA[<h1 id="某图书馆热门数据爬取"><a href="#某图书馆热门数据爬取" class="headerlink" title="某图书馆热门数据爬取"></a>某图书馆热门数据爬取</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver <span class="keyword">import</span> ActionChains</span><br><span class="line">broswer = webdriver.Chrome()</span><br><span class="line">broswer.set_window_size(<span class="number">1400</span>, <span class="number">1400</span>)</span><br><span class="line">book = xlwt.Workbook(encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">sheet = book.add_sheet(<span class="string">&#x27;book&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&#x27;title&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">1</span>, <span class="string">&#x27;author&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">2</span>, <span class="string">&#x27;publish&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">3</span>, <span class="string">&#x27;index&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">4</span>, <span class="string">&#x27;times&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search</span>(<span class="params">soup</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">list</span> = soup.find(class_=<span class="string">&#x27;table_line&#x27;</span>).find_all(<span class="string">&#x27;tr&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> <span class="built_in">list</span>:</span><br><span class="line">        title = item.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">1</span>].text</span><br><span class="line">        author = item.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">2</span>].text</span><br><span class="line">        publish = item.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">3</span>].text</span><br><span class="line">        index = item.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">4</span>].text</span><br><span class="line">        times = item.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">5</span>].text</span><br><span class="line">        <span class="keyword">global</span> n</span><br><span class="line">        sheet.write(n, <span class="number">0</span>, title)</span><br><span class="line">        sheet.write(n, <span class="number">1</span>, author)</span><br><span class="line">        sheet.write(n, <span class="number">2</span>, publish)</span><br><span class="line">        sheet.write(n, <span class="number">3</span>, index)</span><br><span class="line">        sheet.write(n, <span class="number">4</span>, times)</span><br><span class="line"></span><br><span class="line">        n = n+<span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">next_page</span>():</span></span><br><span class="line">    broswer.get(<span class="string">&#x27;http://opac.hznu.edu.cn:8080/top/top_lend.php&#x27;</span>)</span><br><span class="line">    btn2 = broswer.find_element_by_xpath(<span class="string">&#x27;/html/body/div[3]/a[4]&#x27;</span>)</span><br><span class="line">    ActionChains(broswer).click(btn2).perform()</span><br><span class="line">    html = broswer.page_source</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">    search(soup)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">        next_page()</span><br><span class="line"></span><br><span class="line">main()</span><br><span class="line">book.save(<span class="string">&#x27;book.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>纯课设需要，无商业用途</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 爬虫 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[yq数据爬取]]></title>
      <url>/2021/07/19/yq%E6%95%B0%E6%8D%AE%E7%88%AC%E5%8F%96/</url>
      <content type="html"><![CDATA[<h1 id="yq数据爬取"><a href="#yq数据爬取" class="headerlink" title="yq数据爬取"></a>yq数据爬取</h1><blockquote>
<p>此网站CSS元素定期更新，若复制使用，则需写的新的CSS元素的定位，旧的定位可能用不了</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd<span class="comment">#数据框操作</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver <span class="keyword">import</span> ActionChains</span><br><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"><span class="keyword">import</span> pyecharts</span><br><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">broswer = webdriver.Chrome()</span><br><span class="line">broswer.set_window_size(<span class="number">500</span>, <span class="number">500</span>)</span><br><span class="line">book = xlwt.Workbook(encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">sheet = book.add_sheet(<span class="string">&#x27;中国与全球疫情趋势&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&#x27;地区&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">1</span>, <span class="string">&#x27;新增&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">2</span>, <span class="string">&#x27;现有&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">3</span>, <span class="string">&#x27;累计&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">4</span>, <span class="string">&#x27;治愈&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">5</span>, <span class="string">&#x27;死亡&#x27;</span>)</span><br><span class="line">n = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;def data_s(i):</span></span><br><span class="line"><span class="string">    wb = xlrd.open_workbook(&#x27;全国疫情趋势.xlsx&#x27;)  # 打开文件</span></span><br><span class="line"><span class="string">    sheet = wb.sheet_by_index(0)</span></span><br><span class="line"><span class="string">    cols = sheet.col_values(i)  # 获取新增</span></span><br><span class="line"><span class="string">    rows = sheet.col_values(0)  # 获取省份</span></span><br><span class="line"><span class="string">    dir = &#123;&#125;</span></span><br><span class="line"><span class="string">    for i in range(1, 35):</span></span><br><span class="line"><span class="string">        temp = rows[i]</span></span><br><span class="line"><span class="string">        dir[temp] = cols[i]</span></span><br><span class="line"><span class="string">    arr = list(dir.keys())</span></span><br><span class="line"><span class="string">    num = list(dir.values())</span></span><br><span class="line"><span class="string">    return arr,num&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;#柱形图</span></span><br><span class="line"><span class="string">def visual_bar():</span></span><br><span class="line"><span class="string">        s = [&#x27;&#x27;,&#x27;新增&#x27;,&#x27;现有&#x27;,&#x27;累计&#x27;,&#x27;治愈&#x27;,&#x27;死亡&#x27;]</span></span><br><span class="line"><span class="string">        for i in range(1,6):</span></span><br><span class="line"><span class="string">            arr,num = data_s(i)</span></span><br><span class="line"><span class="string">            bar = (Bar()</span></span><br><span class="line"><span class="string">                   .add_xaxis(arr)</span></span><br><span class="line"><span class="string">                   .add_yaxis(&#x27;&#x27;, num)</span></span><br><span class="line"><span class="string">                   )</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            bar.render(&#x27;%s.html&#x27;%(s[i]))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment">#饼状图现有人数最多的前10个省</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;def visual_pie():</span></span><br><span class="line"><span class="string">    arr , num = data_s(2)</span></span><br><span class="line"><span class="string">    pie = Pie(&quot;现有人数最多的10个省&quot;, &quot;现有人数&quot;)</span></span><br><span class="line"><span class="string">    pie.add(&quot;累计人数&quot;, arr, num)</span></span><br><span class="line"><span class="string">    pie.render(&#x27;现有人数最多的10个省.html&#x27;)#</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据获取加保存</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search</span>(<span class="params">soup</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">list</span> = soup.find(class_=<span class="string">&#x27;VirusTable_1-1-303_38pQEh&#x27;</span>).find_all(class_=<span class="string">&#x27;VirusTable_1-1-303_3m6Ybq&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> <span class="built_in">list</span>:</span><br><span class="line">        diqu = item.find(class_=<span class="string">&#x27;VirusTable_1-1-303_AcDK7v&#x27;</span>).text</span><br><span class="line">        add1 = item.find_all(class_=<span class="string">&#x27;VirusTable_1-1-303_3x1sDV&#x27;</span>)[<span class="number">0</span>].text</span><br><span class="line">        xianyou = item.find_all(class_=<span class="string">&#x27;VirusTable_1-1-303_3x1sDV&#x27;</span>)[<span class="number">1</span>].text</span><br><span class="line">        leiji = item.find_all(class_=<span class="string">&#x27;VirusTable_1-1-303_3x1sDV&#x27;</span>)[<span class="number">2</span>].text</span><br><span class="line">        zhiyu = item.find_all(class_=<span class="string">&#x27;VirusTable_1-1-303_EjGi8c&#x27;</span>)[<span class="number">0</span>].text</span><br><span class="line">        siwang = item.find_all(class_=<span class="string">&#x27;VirusTable_1-1-303_EjGi8c&#x27;</span>)[<span class="number">1</span>].text</span><br><span class="line">        <span class="keyword">global</span> n</span><br><span class="line"></span><br><span class="line">        sheet.write(n, <span class="number">0</span>, diqu)</span><br><span class="line">        sheet.write(n, <span class="number">1</span>, add1)</span><br><span class="line">        sheet.write(n, <span class="number">2</span>, xianyou)</span><br><span class="line">        sheet.write(n, <span class="number">3</span>, leiji)</span><br><span class="line">        sheet.write(n, <span class="number">4</span>, zhiyu)</span><br><span class="line">        sheet.write(n, <span class="number">5</span>, siwang)</span><br><span class="line">        n = n+<span class="number">1</span></span><br><span class="line">        list1 = soup.find(class_=<span class="string">&#x27;VirusTable_1-1-303_3U6wJT&#x27;</span>).find_all(class_=<span class="string">&#x27;VirusTable_1-1-303_2AH4U9&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> list1:</span><br><span class="line">        diqu1 = item.find(class_=<span class="string">&#x27;VirusTable_1-1-303_AcDK7v&#x27;</span>).text</span><br><span class="line">        add11 = item.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">1</span>].text</span><br><span class="line">        leiji1 = <span class="built_in">int</span>(item.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">2</span>].text)</span><br><span class="line">        zhiyu1 = <span class="built_in">int</span>(item.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">3</span>].text)</span><br><span class="line">        xianyou1 = leiji1 - zhiyu1</span><br><span class="line">        siwang1 = item.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">4</span>].text</span><br><span class="line"></span><br><span class="line">        sheet.write(n, <span class="number">0</span>, diqu1)</span><br><span class="line">        sheet.write(n, <span class="number">1</span>, add11)</span><br><span class="line">        sheet.write(n, <span class="number">2</span>, xianyou1)</span><br><span class="line">        sheet.write(n, <span class="number">3</span>, leiji1)</span><br><span class="line">        sheet.write(n, <span class="number">4</span>, zhiyu1)</span><br><span class="line">        sheet.write(n, <span class="number">5</span>, siwang1)</span><br><span class="line">        n = n + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    broswer.get(<span class="string">&#x27;https://voice.baidu.com/act/newpneumonia/newpneumonia/?from=osari_aladin_banner&#x27;</span>)</span><br><span class="line">    btn1 = broswer.find_element_by_xpath(<span class="string">&#x27;/html/body/div[2]/div/div/div/section/div[2]/div[4]/div[3]/div[4]/div&#x27;</span>)</span><br><span class="line">    ActionChains(broswer).click(btn1).perform()</span><br><span class="line">    time.sleep(<span class="number">3</span>)</span><br><span class="line">    btn2 = broswer.find_element_by_xpath(<span class="string">&#x27;/html/body/div[2]/div/div/div/section/div[2]/div[4]/div[3]/div[11]/div&#x27;</span>)</span><br><span class="line">    ActionChains(broswer).click(btn2).perform()</span><br><span class="line">    time.sleep(<span class="number">3</span>)</span><br><span class="line">    html = broswer.page_source</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line">    search(soup)</span><br><span class="line">    book.save(<span class="string">&#x27;全国疫情趋势.xlsx&#x27;</span>)</span><br><span class="line">    time.sleep(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      
        <categories>
            
            <category> Python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 爬虫 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[修饰符]]></title>
      <url>/2021/07/19/%E4%BF%AE%E9%A5%B0%E7%AC%A6/</url>
      <content type="html"><![CDATA[<h3 id="final"><a href="#final" class="headerlink" title="final"></a>final</h3><ul>
<li>final修饰的类不能被继承</li>
<li>final定义的方法不能被重写</li>
<li>final定义的常量不能被重写赋值</li>
</ul>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> JavaSe </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[数组]]></title>
      <url>/2021/07/19/%E6%95%B0%E7%BB%84/</url>
      <content type="html"><![CDATA[<h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><ol>
<li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] a;<span class="comment">//此处只是声明了一个数组，但是没有创建</span></span><br></pre></td></tr></table></figure></li>
<li><p>```java<br>new [5];//此处创建了数组但是没有引用对象</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">3. ```java</span><br><span class="line">   int[] a = new [5];//引用+创建</span><br></pre></td></tr></table></figure></li>
<li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="comment">//方式1 分配空间与赋值分步进行</span></span><br><span class="line"> <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>]; </span><br><span class="line">		a[<span class="number">0</span>] = <span class="number">100</span>;</span><br><span class="line">        a[<span class="number">1</span>] = <span class="number">101</span>;</span><br><span class="line">        a[<span class="number">2</span>] = <span class="number">103</span>;</span><br><span class="line">        a[<span class="number">3</span>] = <span class="number">120</span>;</span><br><span class="line">        a[<span class="number">4</span>] = <span class="number">140</span>;</span><br><span class="line"><span class="comment">//方式2 分配空间，同时赋值</span></span><br><span class="line">		<span class="comment">//写法一： 分配空间同时赋值</span></span><br><span class="line">       		 <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">100</span>,<span class="number">102</span>,<span class="number">444</span>,<span class="number">836</span>,<span class="number">3236</span>&#125;;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//写法二： 省略了new int[],效果一样</span></span><br><span class="line">       		 <span class="keyword">int</span>[] b = &#123;<span class="number">100</span>,<span class="number">102</span>,<span class="number">444</span>,<span class="number">836</span>,<span class="number">3236</span>&#125;;</span><br><span class="line">        <span class="comment">//写法三（错误写法）：同时分配空间，和指定内容</span></span><br><span class="line">        <span class="comment">//在这个例子里，长度是3，内容是5个，产生矛盾了</span></span><br><span class="line">        <span class="comment">//所以如果指定了数组的内容，就不能同时设置数组的长度</span></span><br><span class="line">       		<span class="keyword">int</span>[] c = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>]&#123;<span class="number">100</span>,<span class="number">102</span>,<span class="number">444</span>,<span class="number">836</span>,<span class="number">3236</span>&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>```java<br>//二维数组<br> //初始化二维数组，</p>
<pre><code>   int[][] a = new int[2][3];
</code></pre>
<p>//只分配了二维数组</p>
<pre><code>   int[][] b = new int[2][]; //有两个一维数组，每个一维数组的长度暂未分配
   b[0]  =new int[3];
</code></pre>
<p> //指定内容的同时，分配空间</p>
<pre><code>   int[][] c = new int[][]&#123;
           &#123;1,2,4&#125;,
           &#123;4,5&#125;,
           &#123;6,7,8,9&#125;
   &#125;;
</code></pre>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### Arrays</span><br><span class="line"></span><br><span class="line">1. </span><br><span class="line"></span><br><span class="line">   ```java</span><br><span class="line">   //Arrays 数组复制Arrays.copyOfRange</span><br><span class="line">    int a[] = new int[] &#123; 18, 62, 68, 82, 65, 9 &#125;;</span><br><span class="line">    </span><br><span class="line">           // copyOfRange(int[] original, int from, int to)</span><br><span class="line">           // 第一个参数表示源数组</span><br><span class="line">           // 第二个参数表示开始位置(取得到)</span><br><span class="line">           // 第三个参数表示结束位置(取不到)</span><br><span class="line">           int[] b = Arrays.copyOfRange(a, 0, 3);</span><br></pre></td></tr></table></figure></li>
<li><p>```java<br>//Arrays 转化为字符串Arrays.toString</p>
<pre><code> int a[] = new int[] &#123; 18, 62, 68, 82, 65, 9 &#125;;
    String content = Arrays.toString(a);
    System.out.println(content);
</code></pre>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">3. ```java</span><br><span class="line">   //Arrays 排序Arrays.toString</span><br><span class="line">           int a[] = new int[] &#123; 18, 62, 68, 82, 65, 9 &#125;;</span><br><span class="line">           System.out.println(&quot;排序之前 :&quot;);</span><br><span class="line">           System.out.println(Arrays.toString(a));</span><br><span class="line">           Arrays.sort(a);</span><br><span class="line">           System.out.println(&quot;排序之后:&quot;);</span><br><span class="line">           System.out.println(Arrays.toString(a));</span><br></pre></td></tr></table></figure></li>
<li><p>```java<br>//Arrays 搜索Arrays.binarySearch<br>System.out.println(“数字 62出现的位置:”+Arrays.binarySearch(a, 62));</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">5. ```java</span><br><span class="line">   //Arrays 判断是否相同Arrays.equals</span><br><span class="line">      int a[] = new int[] &#123; 18, 62, 68, 82, 65, 9 &#125;;</span><br><span class="line">           int b[] = new int[] &#123; 18, 62, 68, 82, 65, 8 &#125;;</span><br><span class="line">    </span><br><span class="line">           System.out.println(Arrays.equals(a, b));</span><br></pre></td></tr></table></figure></li>
<li><pre><code class="java">//Arrays 填充
 Arrays.fill(a, 5);
</code></pre>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> JavaSe </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[数字与字符串]]></title>
      <url>/2021/07/19/%E6%95%B0%E5%AD%97%E4%B8%8E%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      <content type="html"><![CDATA[<h3 id="封装类"><a href="#封装类" class="headerlink" title="封装类"></a>封装类</h3><p>所有的基本类型都有对应的类类型，eg: int–&gt;Integer</p>
<ul>
<li>基本类型转封装类</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//基本类型转换成封装类型</span></span><br><span class="line">       Integer it = <span class="keyword">new</span> Integer(i);</span><br></pre></td></tr></table></figure>

<ul>
<li>封装类转基本类型</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">5</span>;</span><br><span class="line"> </span><br><span class="line">     <span class="comment">//基本类型转换成封装类型</span></span><br><span class="line">     Integer it = <span class="keyword">new</span> Integer(i);</span><br><span class="line">      </span><br><span class="line">     <span class="comment">//封装类型转换成基本类型</span></span><br><span class="line">     <span class="keyword">int</span> i2 = it.intValue();</span><br></pre></td></tr></table></figure>

<h3 id="自动装箱"><a href="#自动装箱" class="headerlink" title="自动装箱"></a>自动装箱</h3><h4 id="装箱"><a href="#装箱" class="headerlink" title="装箱"></a>装箱</h4><p>​        自动把基本类型转换为类类型</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">5</span>;</span><br><span class="line"> </span><br><span class="line">      <span class="comment">//基本类型转换成封装类型</span></span><br><span class="line">      Integer it = <span class="keyword">new</span> Integer(i);</span><br><span class="line">       </span><br><span class="line">      <span class="comment">//自动转换就叫装箱</span></span><br><span class="line">      Integer it2 = i;</span><br></pre></td></tr></table></figure>

<h4 id="自动拆箱"><a href="#自动拆箱" class="headerlink" title="自动拆箱"></a>自动拆箱</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">      Integer it = <span class="keyword">new</span> Integer(i);</span><br><span class="line">        </span><br><span class="line">      <span class="comment">//封装类型转换成基本类型</span></span><br><span class="line">      <span class="keyword">int</span> i2 = it.intValue();</span><br><span class="line">       </span><br><span class="line">      <span class="comment">//自动转换就叫拆箱</span></span><br><span class="line">      <span class="keyword">int</span> i3 = it;</span><br></pre></td></tr></table></figure>

<h3 id="操作字符串"><a href="#操作字符串" class="headerlink" title="操作字符串"></a>操作字符串</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">charAt	获取字符	</span><br><span class="line">toCharArray	获取对应的字符数组	</span><br><span class="line">subString	截取子字符串	</span><br><span class="line">split	分隔	</span><br><span class="line">trim	去掉首尾空格	</span><br><span class="line">toLowerCase</span><br><span class="line">toUpperCase	大小写	</span><br><span class="line">indexOf</span><br><span class="line">lastIndexOf</span><br><span class="line">contains	定位	</span><br><span class="line">replaceAll</span><br><span class="line">replaceFirst	替换</span><br></pre></td></tr></table></figure>

<h3 id="比较字符串"><a href="#比较字符串" class="headerlink" title="比较字符串"></a>比较字符串</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"> String str1 = <span class="string">&quot;the light&quot;</span>;</span><br><span class="line">         </span><br><span class="line">        String str2 = <span class="keyword">new</span> String(str1);</span><br><span class="line">         </span><br><span class="line">        <span class="comment">//==用于判断是否是同一个字符串对象</span></span><br><span class="line">        System.out.println( str1  ==  str2);</span><br><span class="line">------------------------------------------------</span><br><span class="line">    String str1 = <span class="string">&quot;the light&quot;</span>;</span><br><span class="line">        String str3 = <span class="string">&quot;the light&quot;</span>;</span><br><span class="line">        System.out.println( str1  ==  str3);</span><br><span class="line"></span><br><span class="line">------------------------------------------------</span><br><span class="line">使用equals进行字符串内容的比较，必须大小写一致</span><br><span class="line">equalsIgnoreCase，忽略大小写判断内容是否一致</span><br><span class="line">    </span><br><span class="line"> ------------------------------------------------</span><br><span class="line">    String str1 = <span class="string">&quot;the light&quot;</span>;</span><br><span class="line">         </span><br><span class="line">        String start = <span class="string">&quot;the&quot;</span>;</span><br><span class="line">        String end = <span class="string">&quot;Ight&quot;</span>;</span><br><span class="line">         </span><br><span class="line">        System.out.println(str1.startsWith(start));<span class="comment">//以...开始</span></span><br><span class="line">        System.out.println(str1.endsWith(end));<span class="comment">//以...结束</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="https://how2j.cn/stage/12.html">https://how2j.cn/stage/12.html</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> JavaSe </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[操作符]]></title>
      <url>/2021/07/19/%E6%93%8D%E4%BD%9C%E7%AC%A6/</url>
      <content type="html"><![CDATA[<h3 id="表达式-值1-值2"><a href="#表达式-值1-值2" class="headerlink" title="表达式?值1:值2"></a>表达式?值1:值2</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">int</span> i = <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">6</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">int</span> k = i &lt; j ? <span class="number">99</span> : <span class="number">88</span>; </span><br><span class="line"><span class="comment">// 相当于</span></span><br><span class="line">        <span class="keyword">if</span> (i&lt; j) &#123;</span><br><span class="line">            k = <span class="number">99</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            k = <span class="number">88</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<p>满足条件执行值1，不满足执行值2</p>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> JavaSe </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[变量]]></title>
      <url>/2021/07/19/%E5%8F%98%E9%87%8F/</url>
      <content type="html"><![CDATA[<h2 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2><ul>
<li>小转大可以，大转小有时需要强转</li>
<li>大转小需要强制类型转换</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">byte</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> i = (<span class="keyword">int</span>) a;  </span><br></pre></td></tr></table></figure>



<h2 id="命名规则"><a href="#命名规则" class="headerlink" title="命名规则"></a>命名规则</h2><ul>
<li>变量命名只能是 字母 、数字、$ 、_</li>
<li>开头不能是数字</li>
</ul>
]]></content>
      
        <categories>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> JavaSe </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[搭建博客GitHub+Hexo]]></title>
      <url>/2021/07/19/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2GitHub-Hexo/</url>
      <content type="html"><![CDATA[<h1 id="搭建博客详细步骤"><a href="#搭建博客详细步骤" class="headerlink" title="搭建博客详细步骤"></a>搭建博客详细步骤</h1><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>安装完成后 输入node -v 和 npm -v ，如果出现版本好，则安装成功</p>
<h2 id="添加国内镜像"><a href="#添加国内镜像" class="headerlink" title="添加国内镜像"></a>添加国内镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>

<h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><ul>
<li>目的：为了把本地文件上传到GitHub上</li>
<li>安装：<ul>
<li>最后一步选择<code>Use Git from the Windows Command Prompt</code>,其余默认</li>
<li>完成后，命令行输入git –version</li>
</ul>
</li>
</ul>
<h2 id="注册GitHub账号"><a href="#注册GitHub账号" class="headerlink" title="注册GitHub账号"></a>注册GitHub账号</h2><h2 id="GitHub中"><a href="#GitHub中" class="headerlink" title="GitHub中"></a>GitHub中</h2><ol>
<li>新建项目 （New repository）</li>
<li>项目名格式：账号名.github.io（名称一定要与GitHub账号名一致！！！）</li>
<li>勾选README</li>
<li>进入Settings,点GitHub Pages，点Choose a theme选主题，分支默认是master，如果自动生成其他分支，除master外都删掉，我搭的时候就因为分支问题而没有正常显示</li>
</ol>
<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><ul>
<li><p>建立博客文件，根据自己意愿找个目录建</p>
</li>
<li><p>右键点Git Bash Here</p>
</li>
<li><p>输入</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-cli -g</span><br><span class="line">hexo -v//验证是否成功</span><br><span class="line">hexo init</span><br><span class="line">npm install</span><br><span class="line">hexo g//生成静态网页</span><br><span class="line">hexo s//打开本地服务器查看</span><br></pre></td></tr></table></figure>

<h2 id="连接GitHub与本地"><a href="#连接GitHub与本地" class="headerlink" title="连接GitHub与本地"></a>连接GitHub与本地</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;GitHub名字&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;邮箱&quot;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>生成密钥SSH key:</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;邮箱&quot;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>进入GitHub，头像下面的<code>settings </code>，然后<code> SSH and GPG keys</code>新建一个SSH，名字随便</p>
</li>
<li><p>打开Git bash</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>

<ul>
<li><p>将内容复制到框中，保存</p>
</li>
<li><p>输入<code> ssh -T git@github.com</code>出现用户名就成功</p>
</li>
<li><p>博客根目录下_config.yml文件，配置相关信息</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: https://github.com/用户名/用户名.github.io</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<h2 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h2><ul>
<li>博客根目录进入git bash</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-deployer-git</span><br></pre></td></tr></table></figure>

<ul>
<li><pre><code class="bash">hexo new post &quot;文章标题&quot;
</code></pre>
</li>
<li><p>在<code>source\_posts</code>目录下就可以看到</p>
</li>
<li><p>编辑完后</p>
<ul>
<li><p>hexo clean 清理缓存①</p>
</li>
<li><p>hexo g 生成静态网页②</p>
</li>
<li><p>hexo s 在本地服务器看效果</p>
</li>
<li><p>hexo d 上传到GitHub③</p>
</li>
</ul>
</li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> 搭建博客 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
